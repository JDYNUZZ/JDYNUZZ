{"file": "/hci/chaoran_data/android-12.0.0_r31/frameworks/base/services/core/jni/com_android_server_tv_TvUinputBridge.cpp", "jni_methods": [{"java_fun": "nativeOpen", "java_sig": "(Ljava/lang/String;Ljava/lang/String;III)J", "cpp_fun": "nativeOpen", "java_fun_full": "com.android.server.tv.UinputBridge long nativeOpen(java.lang.String, java.lang.String, int, int, int)"}, {"java_fun": "nativeGamepadOpen", "java_sig": "(Ljava/lang/String;Ljava/lang/String;)J", "cpp_fun": "nativeGamepadOpen", "java_fun_full": "com.android.server.tv.UinputBridge long nativeGamepadOpen(java.lang.String, java.lang.String)"}, {"java_fun": "nativeClose", "java_sig": "(J)V", "cpp_fun": "nativeClose", "java_fun_full": "com.android.server.tv.UinputBridge void nativeClose(long)"}, {"java_fun": "nativeSendKey", "java_sig": "(JIZ)V", "cpp_fun": "nativeSendKey", "java_fun_full": "com.android.server.tv.UinputBridge void nativeSendKey(long, int, boolean)"}, {"java_fun": "nativeSendPointerDown", "java_sig": "(JIII)V", "cpp_fun": "nativeSendPointerDown", "java_fun_full": "com.android.server.tv.UinputBridge void nativeSendPointerDown(long, int, int, int)"}, {"java_fun": "nativeSendPointerUp", "java_sig": "(JI)V", "cpp_fun": "nativeSendPointerUp", "java_fun_full": "com.android.server.tv.UinputBridge void nativeSendPointerUp(long, int)"}, {"java_fun": "nativeClear", "java_sig": "(J)V", "cpp_fun": "nativeClear", "java_fun_full": "com.android.server.tv.UinputBridge void nativeClear(long)"}, {"java_fun": "nativeSendPointerSync", "java_sig": "(J)V", "cpp_fun": "nativeSendPointerSync", "java_fun_full": "com.android.server.tv.UinputBridge void nativeSendPointerSync(long)"}, {"java_fun": "nativeSendGamepadKey", "java_sig": "(JIZ)V", "cpp_fun": "nativeSendGamepadKey", "java_fun_full": "com.android.server.tv.UinputBridge void nativeSendGamepadKey(long, int, boolean)"}, {"java_fun": "nativeSendGamepadAxisValue", "java_sig": "(JIF)V", "cpp_fun": "nativeSendGamepadAxisValue", "java_fun_full": "com.android.server.tv.UinputBridge void nativeSendGamepadAxisValue(long, int, float)"}], "dependency": [["android::unassignSlot(int32_t)", "android::findSlot(int32_t)"], ["android::UInputDescriptor::Open(const char *, const char *, uint16_t)", "android::UInputDescriptor::IsValid()"], ["android::NativeConnection::IsGamepad()", "android::NativeConnection::getType()"], ["android::NativeConnection::IsRemote()", "android::NativeConnection::getType()"], ["android::NativeConnection::open(const char *, const char *, int32_t, int32_t, int32_t)", "android::initKeysMap()"], ["android::NativeConnection::open(const char *, const char *, int32_t, int32_t, int32_t)", "android::UInputDescriptor::Open(const char *, const char *, uint16_t)"], ["android::NativeConnection::open(const char *, const char *, int32_t, int32_t, int32_t)", "android::UInputDescriptor::EnableKey(int)"], ["android::NativeConnection::open(const char *, const char *, int32_t, int32_t, int32_t)", "android::UInputDescriptor::Create()"], ["android::NativeConnection::open(const char *, const char *, int32_t, int32_t, int32_t)", "android::UInputDescriptor::Detach()"], ["android::NativeConnection::openGamepad(const char *, const char *)", "android::initGamepadKeyMap()"], ["android::NativeConnection::openGamepad(const char *, const char *)", "android::UInputDescriptor::Open(const char *, const char *, uint16_t)"], ["android::NativeConnection::openGamepad(const char *, const char *)", "android::UInputDescriptor::EnableKey(int)"], ["android::NativeConnection::openGamepad(const char *, const char *)", "android::UInputDescriptor::EnableAxesEvents()"], ["android::NativeConnection::openGamepad(const char *, const char *)", "android::UInputDescriptor::EnableAxis(int, int, int)"], ["android::NativeConnection::openGamepad(const char *, const char *)", "android::UInputDescriptor::Create()"], ["android::NativeConnection::openGamepad(const char *, const char *)", "android::UInputDescriptor::Detach()"], ["android::nativeOpen(JNIEnv *, jclass, jstring, jstring, jint, jint, jint)", "android::NativeConnection::open(const char *, const char *, int32_t, int32_t, int32_t)"], ["android::nativeGamepadOpen(JNIEnv *, jclass, jstring, jstring)", "android::NativeConnection::openGamepad(const char *, const char *)"], ["android::nativeSendKey(JNIEnv *, jclass, jlong, jint, jboolean)", "android::getLinuxKeyCode(int32_t)"], ["android::nativeSendKey(JNIEnv *, jclass, jlong, jint, jboolean)", "android::NativeConnection::IsGamepad()"], ["android::nativeSendKey(JNIEnv *, jclass, jlong, jint, jboolean)", "android::NativeConnection::sendEvent(int32_t, int32_t, int32_t)"], ["android::nativeSendGamepadKey(JNIEnv *, jclass, jlong, jint, jboolean)", "android::NativeConnection::IsGamepad()"], ["android::nativeSendGamepadKey(JNIEnv *, jclass, jlong, jint, jboolean)", "android::getGamepadkeyCode(int32_t)"], ["android::nativeSendGamepadKey(JNIEnv *, jclass, jlong, jint, jboolean)", "android::NativeConnection::sendEvent(int32_t, int32_t, int32_t)"], ["android::nativeSendGamepadAxisValue(JNIEnv *, jclass, jlong, jint, jfloat)", "android::NativeConnection::IsGamepad()"], ["android::nativeSendGamepadAxisValue(JNIEnv *, jclass, jlong, jint, jfloat)", "android::getGamepadAxis(int32_t)"], ["android::nativeSendGamepadAxisValue(JNIEnv *, jclass, jlong, jint, jfloat)", "android::NativeConnection::sendEvent(int32_t, int32_t, int32_t)"], ["android::nativeSendPointerDown(JNIEnv *, jclass, jlong, jint, jint, jint)", "android::NativeConnection::IsGamepad()"], ["android::nativeSendPointerDown(JNIEnv *, jclass, jlong, jint, jint, jint)", "android::findSlot(int32_t)"], ["android::nativeSendPointerDown(JNIEnv *, jclass, jlong, jint, jint, jint)", "android::assignSlot(int32_t)"], ["android::nativeSendPointerDown(JNIEnv *, jclass, jlong, jint, jint, jint)", "android::NativeConnection::sendEvent(int32_t, int32_t, int32_t)"], ["android::nativeSendPointerDown(JNIEnv *, jclass, jlong, jint, jint, jint)", "android::NativeConnection::sendEvent(int32_t, int32_t, int32_t)"], ["android::nativeSendPointerDown(JNIEnv *, jclass, jlong, jint, jint, jint)", "android::NativeConnection::sendEvent(int32_t, int32_t, int32_t)"], ["android::nativeSendPointerDown(JNIEnv *, jclass, jlong, jint, jint, jint)", "android::NativeConnection::sendEvent(int32_t, int32_t, int32_t)"], ["android::nativeSendPointerUp(JNIEnv *, jclass, jlong, jint)", "android::NativeConnection::IsGamepad()"], ["android::nativeSendPointerUp(JNIEnv *, jclass, jlong, jint)", "android::findSlot(int32_t)"], ["android::nativeSendPointerUp(JNIEnv *, jclass, jlong, jint)", "android::NativeConnection::sendEvent(int32_t, int32_t, int32_t)"], ["android::nativeSendPointerUp(JNIEnv *, jclass, jlong, jint)", "android::NativeConnection::sendEvent(int32_t, int32_t, int32_t)"], ["android::nativeSendPointerUp(JNIEnv *, jclass, jlong, jint)", "android::unassignSlot(int32_t)"], ["android::nativeSendPointerSync(JNIEnv *, jclass, jlong)", "android::NativeConnection::sendEvent(int32_t, int32_t, int32_t)"], ["android::nativeClear(JNIEnv *, jclass, jlong)", "android::NativeConnection::IsRemote()"], ["android::nativeClear(JNIEnv *, jclass, jlong)", "android::NativeConnection::sendEvent(int32_t, int32_t, int32_t)"], ["android::nativeClear(JNIEnv *, jclass, jlong)", "android::NativeConnection::getMaxPointers()"], ["android::nativeClear(JNIEnv *, jclass, jlong)", "android::findSlot(int32_t)"], ["android::nativeClear(JNIEnv *, jclass, jlong)", "android::NativeConnection::sendEvent(int32_t, int32_t, int32_t)"], ["android::nativeClear(JNIEnv *, jclass, jlong)", "android::NativeConnection::sendEvent(int32_t, int32_t, int32_t)"], ["android::nativeClear(JNIEnv *, jclass, jlong)", "android::NativeConnection::sendEvent(int32_t, int32_t, int32_t)"], ["android::nativeClear(JNIEnv *, jclass, jlong)", "android::NativeConnection::sendEvent(int32_t, int32_t, int32_t)"], ["android::nativeClear(JNIEnv *, jclass, jlong)", "android::NativeConnection::sendEvent(int32_t, int32_t, int32_t)"], ["android::nativeClear(JNIEnv *, jclass, jlong)", "android::NativeConnection::sendEvent(int32_t, int32_t, int32_t)"]]}