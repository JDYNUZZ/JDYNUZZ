{"file": "/hci/chaoran_data/android-12.0.0_r31/frameworks/base/libs/hwui/jni/fonts/Font.cpp", "jni_methods": [{"java_fun": "nInitBuilder", "java_sig": "()J", "cpp_fun": "Font_Builder_initBuilder", "java_fun_full": "android.graphics.fonts.Font$Builder long nInitBuilder()"}, {"java_fun": "nAddAxis", "java_sig": "(JIF)V", "cpp_fun": "Font_Builder_addAxis", "java_fun_full": "android.graphics.fonts.Font$Builder void nAddAxis(long, int, float)"}, {"java_fun": "nBuild", "java_sig": "(JLjava/nio/ByteBuffer;Ljava/lang/String;Ljava/lang/String;IZI)J", "cpp_fun": "Font_Builder_build", "java_fun_full": "android.graphics.fonts.Font$Builder long nBuild(long, java.nio.ByteBuffer, java.lang.String, java.lang.String, int, boolean, int)"}, {"java_fun": "nClone", "java_sig": "(JJIZI)J", "cpp_fun": "Font_Builder_clone", "java_fun_full": "android.graphics.fonts.Font$Builder long nClone(long, long, int, boolean, int)"}, {"java_fun": "nGetMinikinFontPtr", "java_sig": "(J)J", "cpp_fun": "Font_getMinikinFontPtr", "java_fun_full": "android.graphics.fonts.Font long nGetMinikinFontPtr(long)"}, {"java_fun": "nCloneFont", "java_sig": "(J)J", "cpp_fun": "Font_cloneFont", "java_fun_full": "android.graphics.fonts.Font long nCloneFont(long)"}, {"java_fun": "nNewByteBuffer", "java_sig": "(J)Ljava/nio/ByteBuffer;", "cpp_fun": "Font_newByteBuffer", "java_fun_full": "android.graphics.fonts.Font java.nio.ByteBuffer nNewByteBuffer(long)"}, {"java_fun": "nGetBufferAddress", "java_sig": "(J)J", "cpp_fun": "Font_getBufferAddress", "java_fun_full": "android.graphics.fonts.Font long nGetBufferAddress(long)"}, {"java_fun": "nGetReleaseNativeFont", "java_sig": "()J", "cpp_fun": "Font_getReleaseNativeFontFunc", "java_fun_full": "android.graphics.fonts.Font long nGetReleaseNativeFont()"}, {"java_fun": "nGetGlyphBounds", "java_sig": "(JIJLandroid/graphics/RectF;)F", "cpp_fun": "Font_getGlyphBounds", "java_fun_full": "android.graphics.fonts.Font float nGetGlyphBounds(long, int, long, android.graphics.RectF)"}, {"java_fun": "nGetFontMetrics", "java_sig": "(JJLandroid/graphics/Paint$FontMetrics;)F", "cpp_fun": "Font_getFontMetrics", "java_fun_full": "android.graphics.fonts.Font float nGetFontMetrics(long, long, android.graphics.Paint$FontMetrics)"}, {"java_fun": "nGetFontPath", "java_sig": "(J)Ljava/lang/String;", "cpp_fun": "Font_getFontPath", "java_fun_full": "android.graphics.fonts.Font java.lang.String nGetFontPath(long)"}, {"java_fun": "nGetLocaleList", "java_sig": "(J)Ljava/lang/String;", "cpp_fun": "Font_getLocaleList", "java_fun_full": "android.graphics.fonts.Font java.lang.String nGetLocaleList(long)"}, {"java_fun": "nGetPackedStyle", "java_sig": "(J)I", "cpp_fun": "Font_getPackedStyle", "java_fun_full": "android.graphics.fonts.Font int nGetPackedStyle(long)"}, {"java_fun": "nGetIndex", "java_sig": "(J)I", "cpp_fun": "Font_getIndex", "java_fun_full": "android.graphics.fonts.Font int nGetIndex(long)"}, {"java_fun": "nGetAxisCount", "java_sig": "(J)I", "cpp_fun": "Font_getAxisCount", "java_fun_full": "android.graphics.fonts.Font int nGetAxisCount(long)"}, {"java_fun": "nGetAxisInfo", "java_sig": "(JI)J", "cpp_fun": "Font_getAxisInfo", "java_fun_full": "android.graphics.fonts.Font long nGetAxisInfo(long, int)"}, {"java_fun": "nGetSourceId", "java_sig": "(J)I", "cpp_fun": "Font_getSourceId", "java_fun_full": "android.graphics.fonts.Font int nGetSourceId(long)"}, {"java_fun": "nGetAvailableFontSet", "java_sig": "()[J", "cpp_fun": "Font_getAvailableFontSet", "java_fun_full": "android.graphics.fonts.Font long[] nGetAvailableFontSet()"}, {"java_fun": "nGetFontRevision", "java_sig": "(Ljava/nio/ByteBuffer;I)J", "cpp_fun": "FontFileUtil_getFontRevision", "java_fun_full": "android.graphics.fonts.FontFileUtil long nGetFontRevision(java.nio.ByteBuffer, int)"}, {"java_fun": "nGetFontPostScriptName", "java_sig": "(Ljava/nio/ByteBuffer;I)Ljava/lang/String;", "cpp_fun": "FontFileUtil_getFontPostScriptName", "java_fun_full": "android.graphics.fonts.FontFileUtil java.lang.String nGetFontPostScriptName(java.nio.ByteBuffer, int)"}, {"java_fun": "nIsPostScriptType1Font", "java_sig": "(Ljava/nio/ByteBuffer;I)I", "cpp_fun": "FontFileUtil_isPostScriptType1Font", "java_fun_full": "android.graphics.fonts.FontFileUtil int nIsPostScriptType1Font(java.nio.ByteBuffer, int)"}], "dependency": [["android::Font_Builder_addAxis(jlong, jint, jfloat)", "android::toBuilder(jlong)"], ["android::Font_Builder_build(JNIEnv *, jobject, jlong, jobject, jstring, jstring, jint, jboolean, jint)", "android::toBuilder(jlong)"], ["android::Font_Builder_build(JNIEnv *, jobject, jlong, jobject, jstring, jstring, jint, jboolean, jint)", "android::fonts::createMinikinFontSkia(sk_sp<> &&, std::string_view, const void *, size_t, int, const std::vector<> &)"], ["android::Font_Builder_clone(JNIEnv *, jobject, jlong, jlong, jint, jboolean, jint)", "android::toBuilder(jlong)"], ["android::Font_Builder_clone(JNIEnv *, jobject, jlong, jlong, jint, jboolean, jint)", "std::__1::make_shared(sk_sp<> &&, int &&, const void *&&, unsigned long &&, const std::basic_string<> &, int &&, std::vector<> &)"], ["android::fonts::createMinikinFontSkia(sk_sp<> &&, std::string_view, const void *, size_t, int, const std::vector<> &)", "std::__1::make_shared(sk_sp<> &&, int &&, const void *&, unsigned long &, std::basic_string_view<> &, int &, const std::vector<> &)"], ["android::fonts::createMinikinFontSkia(sk_sp<> &&, std::string_view, const void *, size_t, int, const std::vector<> &)", "android::fonts::getNewSourceId()"]]}