{"file": "/hci/chaoran_data/android-12.0.0_r31/frameworks/base/core/jni/com_android_internal_content_NativeLibraryHelper.cpp", "jni_methods": [{"java_fun": "nativeOpenApk", "java_sig": "(Ljava/lang/String;)J", "cpp_fun": "com_android_internal_content_NativeLibraryHelper_openApk", "java_fun_full": "com.android.internal.content.NativeLibraryHelper long nativeOpenApk(java.lang.String)"}, {"java_fun": "nativeOpenApkFd", "java_sig": "(Ljava/io/FileDescriptor;Ljava/lang/String;)J", "cpp_fun": "com_android_internal_content_NativeLibraryHelper_openApkFd", "java_fun_full": "com.android.internal.content.NativeLibraryHelper long nativeOpenApkFd(java.io.FileDescriptor, java.lang.String)"}, {"java_fun": "nativeClose", "java_sig": "(J)V", "cpp_fun": "com_android_internal_content_NativeLibraryHelper_close", "java_fun_full": "com.android.internal.content.NativeLibraryHelper void nativeClose(long)"}, {"java_fun": "nativeCopyNativeBinaries", "java_sig": "(JLjava/lang/String;Ljava/lang/String;ZZ)I", "cpp_fun": "com_android_internal_content_NativeLibraryHelper_copyNativeBinaries", "java_fun_full": "com.android.internal.content.NativeLibraryHelper int nativeCopyNativeBinaries(long, java.lang.String, java.lang.String, boolean, boolean)"}, {"java_fun": "nativeSumNativeBinaries", "java_sig": "(JLjava/lang/String;Z)J", "cpp_fun": "com_android_internal_content_NativeLibraryHelper_sumNativeBinaries", "java_fun_full": "com.android.internal.content.NativeLibraryHelper long nativeSumNativeBinaries(long, java.lang.String, boolean)"}, {"java_fun": "nativeFindSupportedAbi", "java_sig": "(J[Ljava/lang/String;Z)I", "cpp_fun": "com_android_internal_content_NativeLibraryHelper_findSupportedAbi", "java_fun_full": "com.android.internal.content.NativeLibraryHelper int nativeFindSupportedAbi(long, java.lang.String[], boolean)"}, {"java_fun": "hasRenderscriptBitcode", "java_sig": "(J)I", "cpp_fun": "com_android_internal_content_NativeLibraryHelper_hasRenderscriptBitcode", "java_fun_full": "com.android.internal.content.NativeLibraryHelper int hasRenderscriptBitcode(long)"}], "dependency": [["android::isFileDifferent(const char *, uint32_t, time_t, uint32_t, struct stat64 *)", "android::isFileDifferent(const char *, uint32_t, time_t, uint32_t, struct stat64 *)"], ["android::isFileDifferent(const char *, uint32_t, time_t, uint32_t, struct stat64 *)", "android::isFileDifferent(const char *, uint32_t, time_t, uint32_t, struct stat64 *)"], ["android::copyFileIfChanged(JNIEnv *, void *, android::ZipFileRO *, android::ZipEntryRO, const char *)", "android::copyFileIfChanged(JNIEnv *, void *, android::ZipFileRO *, android::ZipEntryRO, const char *)"], ["android::copyFileIfChanged(JNIEnv *, void *, android::ZipFileRO *, android::ZipEntryRO, const char *)", "android::copyFileIfChanged(JNIEnv *, void *, android::ZipFileRO *, android::ZipEntryRO, const char *)"], ["android::copyFileIfChanged(JNIEnv *, void *, android::ZipFileRO *, android::ZipEntryRO, const char *)", "android::copyFileIfChanged(JNIEnv *, void *, android::ZipFileRO *, android::ZipEntryRO, const char *)"], ["android::copyFileIfChanged(JNIEnv *, void *, android::ZipFileRO *, android::ZipEntryRO, const char *)", "android::copyFileIfChanged(JNIEnv *, void *, android::ZipFileRO *, android::ZipEntryRO, const char *)"], ["android::copyFileIfChanged(JNIEnv *, void *, android::ZipFileRO *, android::ZipEntryRO, const char *)", "android::isFileDifferent(const char *, uint32_t, time_t, uint32_t, struct stat64 *)"], ["android::NativeLibrariesIterator::next()", "android::isFilenameSafe(const char *)"], ["android::iterateOverNativeFiles(JNIEnv *, jlong, jstring, jboolean, android::iterFunc, void *)", "android::NativeLibrariesIterator::create(android::ZipFileRO *, bool)"], ["android::iterateOverNativeFiles(JNIEnv *, jlong, jstring, jboolean, android::iterFunc, void *)", "android::NativeLibrariesIterator::next()"], ["android::iterateOverNativeFiles(JNIEnv *, jlong, jstring, jboolean, android::iterFunc, void *)", "android::NativeLibrariesIterator::currentEntry()"], ["android::iterateOverNativeFiles(JNIEnv *, jlong, jstring, jboolean, android::iterFunc, void *)", "android::NativeLibrariesIterator::lastSlash()"], ["android::findSupportedAbi(JNIEnv *, jlong, jobjectArray, jboolean)", "android::NativeLibrariesIterator::create(android::ZipFileRO *, bool)"], ["android::findSupportedAbi(JNIEnv *, jlong, jobjectArray, jboolean)", "android::NativeLibrariesIterator::next()"], ["android::findSupportedAbi(JNIEnv *, jlong, jobjectArray, jboolean)", "android::NativeLibrariesIterator::currentEntry()"], ["android::findSupportedAbi(JNIEnv *, jlong, jobjectArray, jboolean)", "android::NativeLibrariesIterator::lastSlash()"], ["android::com_android_internal_content_NativeLibraryHelper_copyNativeBinaries(JNIEnv *, jclass, jlong, jstring, jstring, jboolean, jboolean)", "android::iterateOverNativeFiles(JNIEnv *, jlong, jstring, jboolean, android::iterFunc, void *)"], ["android::com_android_internal_content_NativeLibraryHelper_sumNativeBinaries(JNIEnv *, jclass, jlong, jstring, jboolean)", "android::iterateOverNativeFiles(JNIEnv *, jlong, jstring, jboolean, android::iterFunc, void *)"], ["android::com_android_internal_content_NativeLibraryHelper_findSupportedAbi(JNIEnv *, jclass, jlong, jobjectArray, jboolean)", "android::findSupportedAbi(JNIEnv *, jlong, jobjectArray, jboolean)"], ["android::com_android_internal_content_NativeLibraryHelper_hasRenderscriptBitcode(JNIEnv *, jclass, jlong)", "android::isFilenameSafe(const char *)"]]}