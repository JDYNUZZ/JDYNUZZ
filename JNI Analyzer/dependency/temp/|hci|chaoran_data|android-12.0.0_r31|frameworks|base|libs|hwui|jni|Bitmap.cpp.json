{"file": "/hci/chaoran_data/android-12.0.0_r31/frameworks/base/libs/hwui/jni/Bitmap.cpp", "jni_methods": [{"java_fun": "nativeCreate", "java_sig": "([IIIIIIZJ)Landroid/graphics/Bitmap;", "cpp_fun": "Bitmap_creator", "java_fun_full": "android.graphics.Bitmap android.graphics.Bitmap nativeCreate(int[], int, int, int, int, int, boolean, long)"}, {"java_fun": "nativeCopy", "java_sig": "(JIZ)Landroid/graphics/Bitmap;", "cpp_fun": "Bitmap_copy", "java_fun_full": "android.graphics.Bitmap android.graphics.Bitmap nativeCopy(long, int, boolean)"}, {"java_fun": "nativeCopyAshmem", "java_sig": "(J)Landroid/graphics/Bitmap;", "cpp_fun": "Bitmap_copyAshmem", "java_fun_full": "android.graphics.Bitmap android.graphics.Bitmap nativeCopyAshmem(long)"}, {"java_fun": "nativeCopyAshmemConfig", "java_sig": "(JI)Landroid/graphics/Bitmap;", "cpp_fun": "Bitmap_copyAshmemConfig", "java_fun_full": "android.graphics.Bitmap android.graphics.Bitmap nativeCopyAshmemConfig(long, int)"}, {"java_fun": "nativeGetNativeFinalizer", "java_sig": "()J", "cpp_fun": "Bitmap_getNativeFinalizer", "java_fun_full": "android.graphics.Bitmap long nativeGetNativeFinalizer()"}, {"java_fun": "nativeRecycle", "java_sig": "(J)V", "cpp_fun": "Bitmap_recycle", "java_fun_full": "android.graphics.Bitmap void nativeRecycle(long)"}, {"java_fun": "nativeReconfigure", "java_sig": "(JIIIZ)V", "cpp_fun": "Bitmap_reconfigure", "java_fun_full": "android.graphics.Bitmap void nativeReconfigure(long, int, int, int, boolean)"}, {"java_fun": "nativeCompress", "java_sig": "(JIILjava/io/OutputStream;[B)Z", "cpp_fun": "Bitmap_compress", "java_fun_full": "android.graphics.Bitmap boolean nativeCompress(long, int, int, java.io.OutputStream, byte[])"}, {"java_fun": "nativeErase", "java_sig": "(JI)V", "cpp_fun": "Bitmap_erase", "java_fun_full": "android.graphics.Bitmap void nativeErase(long, int)"}, {"java_fun": "nativeErase", "java_sig": "(JJJ)V", "cpp_fun": "Bitmap_eraseLong", "java_fun_full": "android.graphics.Bitmap void nativeErase(long, long, long)"}, {"java_fun": "nativeRowBytes", "java_sig": "(J)I", "cpp_fun": "Bitmap_rowBytes", "java_fun_full": "android.graphics.Bitmap int nativeRowBytes(long)"}, {"java_fun": "nativeConfig", "java_sig": "(J)I", "cpp_fun": "Bitmap_config", "java_fun_full": "android.graphics.Bitmap int nativeConfig(long)"}, {"java_fun": "nativeHasAlpha", "java_sig": "(J)Z", "cpp_fun": "Bitmap_hasAlpha", "java_fun_full": "android.graphics.Bitmap boolean nativeHasAlpha(long)"}, {"java_fun": "nativeIsPremultiplied", "java_sig": "(J)Z", "cpp_fun": "Bitmap_isPremultiplied", "java_fun_full": "android.graphics.Bitmap boolean nativeIsPremultiplied(long)"}, {"java_fun": "nativeSetHasAlpha", "java_sig": "(JZZ)V", "cpp_fun": "Bitmap_setHasAlpha", "java_fun_full": "android.graphics.Bitmap void nativeSetHasAlpha(long, boolean, boolean)"}, {"java_fun": "nativeSetPremultiplied", "java_sig": "(JZ)V", "cpp_fun": "Bitmap_setPremultiplied", "java_fun_full": "android.graphics.Bitmap void nativeSetPremultiplied(long, boolean)"}, {"java_fun": "nativeHasMipMap", "java_sig": "(J)Z", "cpp_fun": "Bitmap_hasMipMap", "java_fun_full": "android.graphics.Bitmap boolean nativeHasMipMap(long)"}, {"java_fun": "nativeSetHasMipMap", "java_sig": "(JZ)V", "cpp_fun": "Bitmap_setHasMipMap", "java_fun_full": "android.graphics.Bitmap void nativeSetHasMipMap(long, boolean)"}, {"java_fun": "nativeCreateFromParcel", "java_sig": "(Landroid/os/Parcel;)Landroid/graphics/Bitmap;", "cpp_fun": "Bitmap_createFromParcel", "java_fun_full": "android.graphics.Bitmap android.graphics.Bitmap nativeCreateFromParcel(android.os.Parcel)"}, {"java_fun": "nativeWriteToParcel", "java_sig": "(JILandroid/os/Parcel;)Z", "cpp_fun": "Bitmap_writeToParcel", "java_fun_full": "android.graphics.Bitmap boolean nativeWriteToParcel(long, int, android.os.Parcel)"}, {"java_fun": "nativeExtractAlpha", "java_sig": "(JJ[I)Landroid/graphics/Bitmap;", "cpp_fun": "Bitmap_extractAlpha", "java_fun_full": "android.graphics.Bitmap android.graphics.Bitmap nativeExtractAlpha(long, long, int[])"}, {"java_fun": "nativeGenerationId", "java_sig": "(J)I", "cpp_fun": "Bitmap_getGenerationId", "java_fun_full": "android.graphics.Bitmap int nativeGenerationId(long)"}, {"java_fun": "nativeGetPixel", "java_sig": "(JII)I", "cpp_fun": "Bitmap_getPixel", "java_fun_full": "android.graphics.Bitmap int nativeGetPixel(long, int, int)"}, {"java_fun": "nativeGetColor", "java_sig": "(JII)J", "cpp_fun": "Bitmap_getColor", "java_fun_full": "android.graphics.Bitmap long nativeGetColor(long, int, int)"}, {"java_fun": "nativeGetPixels", "java_sig": "(J[IIIIIII)V", "cpp_fun": "Bitmap_getPixels", "java_fun_full": "android.graphics.Bitmap void nativeGetPixels(long, int[], int, int, int, int, int, int)"}, {"java_fun": "nativeSetPixel", "java_sig": "(JIII)V", "cpp_fun": "Bitmap_setPixel", "java_fun_full": "android.graphics.Bitmap void nativeSetPixel(long, int, int, int)"}, {"java_fun": "nativeSetPixels", "java_sig": "(J[IIIIIII)V", "cpp_fun": "Bitmap_setPixels", "java_fun_full": "android.graphics.Bitmap void nativeSetPixels(long, int[], int, int, int, int, int, int)"}, {"java_fun": "nativeCopyPixelsToBuffer", "java_sig": "(JLjava/nio/Buffer;)V", "cpp_fun": "Bitmap_copyPixelsToBuffer", "java_fun_full": "android.graphics.Bitmap void nativeCopyPixelsToBuffer(long, java.nio.Buffer)"}, {"java_fun": "nativeCopyPixelsFromBuffer", "java_sig": "(JLjava/nio/Buffer;)V", "cpp_fun": "Bitmap_copyPixelsFromBuffer", "java_fun_full": "android.graphics.Bitmap void nativeCopyPixelsFromBuffer(long, java.nio.Buffer)"}, {"java_fun": "nativeSameAs", "java_sig": "(JJ)Z", "cpp_fun": "Bitmap_sameAs", "java_fun_full": "android.graphics.Bitmap boolean nativeSameAs(long, long)"}, {"java_fun": "nativePrepareToDraw", "java_sig": "(J)V", "cpp_fun": "Bitmap_prepareToDraw", "java_fun_full": "android.graphics.Bitmap void nativePrepareToDraw(long)"}, {"java_fun": "nativeGetAllocationByteCount", "java_sig": "(J)I", "cpp_fun": "Bitmap_getAllocationByteCount", "java_fun_full": "android.graphics.Bitmap int nativeGetAllocationByteCount(long)"}, {"java_fun": "nativeCopyPreserveInternalConfig", "java_sig": "(J)Landroid/graphics/Bitmap;", "cpp_fun": "Bitmap_copyPreserveInternalConfig", "java_fun_full": "android.graphics.Bitmap android.graphics.Bitmap nativeCopyPreserveInternalConfig(long)"}, {"java_fun": "nativeWrapHardwareBufferBitmap", "java_sig": "(Landroid/hardware/HardwareBuffer;J)Landroid/graphics/Bitmap;", "cpp_fun": "Bitmap_wrapHardwareBufferBitmap", "java_fun_full": "android.graphics.Bitmap android.graphics.Bitmap nativeWrapHardwareBufferBitmap(android.hardware.HardwareBuffer, long)"}, {"java_fun": "nativeGetHardwareBuffer", "java_sig": "(J)Landroid/hardware/HardwareBuffer;", "cpp_fun": "Bitmap_getHardwareBuffer", "java_fun_full": "android.graphics.Bitmap android.hardware.HardwareBuffer nativeGetHardwareBuffer(long)"}, {"java_fun": "nativeComputeColorSpace", "java_sig": "(J)Landroid/graphics/ColorSpace;", "cpp_fun": "Bitmap_computeColorSpace", "java_fun_full": "android.graphics.Bitmap android.graphics.ColorSpace nativeComputeColorSpace(long)"}, {"java_fun": "nativeSetColorSpace", "java_sig": "(JJ)V", "cpp_fun": "Bitmap_setColorSpace", "java_fun_full": "android.graphics.Bitmap void nativeSetColorSpace(long, long)"}, {"java_fun": "nativeIsSRGB", "java_sig": "(J)Z", "cpp_fun": "Bitmap_isSRGB", "java_fun_full": "android.graphics.Bitmap boolean nativeIsSRGB(long)"}, {"java_fun": "nativeIsSRGBLinear", "java_sig": "(J)Z", "cpp_fun": "Bitmap_isSRGBLinear", "java_fun_full": "android.graphics.Bitmap boolean nativeIsSRGBLinear(long)"}, {"java_fun": "nativeSetImmutable", "java_sig": "(J)V", "cpp_fun": "Bitmap_setImmutable", "java_fun_full": "android.graphics.Bitmap void nativeSetImmutable(long)"}, {"java_fun": "nativeIsImmutable", "java_sig": "(J)Z", "cpp_fun": "Bitmap_isImmutable", "java_fun_full": "android.graphics.Bitmap boolean nativeIsImmutable(long)"}, {"java_fun": "nativeIsBackedByAshmem", "java_sig": "(J)Z", "cpp_fun": "Bitmap_isBackedByAshmem", "java_fun_full": "android.graphics.Bitmap boolean nativeIsBackedByAshmem(long)"}], "dependency": [["register_android_graphics_Bitmap(JNIEnv *)", "register_android_graphics_Bitmap(JNIEnv *)"], ["register_android_graphics_Bitmap(JNIEnv *)", "register_android_graphics_Bitmap(JNIEnv *)"], ["register_android_graphics_Bitmap(JNIEnv *)", "register_android_graphics_Bitmap(JNIEnv *)"], ["register_android_graphics_Bitmap(JNIEnv *)", "register_android_graphics_Bitmap(JNIEnv *)"], ["register_android_graphics_Bitmap(JNIEnv *)", "register_android_graphics_Bitmap(JNIEnv *)"], ["register_android_graphics_Bitmap(JNIEnv *)", "register_android_graphics_Bitmap(JNIEnv *)"], ["register_android_graphics_Bitmap(JNIEnv *)", "GraphicsJNI::getNativeBitmap(JNIEnv *, jobject)"], ["register_android_graphics_Bitmap(JNIEnv *)", "GraphicsJNI::getBitmapInfo(JNIEnv *, jobject, uint32_t *, bool *)"], ["android::BitmapWrapper::freePixels()", "android::Bitmap::info()"], ["android::BitmapWrapper::freePixels()", "sk_sp::operator->()"], ["android::BitmapWrapper::freePixels()", "android::Bitmap::hasHardwareMipMap()"], ["android::BitmapWrapper::freePixels()", "sk_sp::operator->()"], ["android::BitmapWrapper::freePixels()", "android::Bitmap::getAllocationByteCount()"], ["android::BitmapWrapper::freePixels()", "sk_sp::operator->()"], ["android::BitmapWrapper::freePixels()", "SkPixelRef::rowBytes()"], ["android::BitmapWrapper::freePixels()", "sk_sp::operator->()"], ["android::BitmapWrapper::freePixels()", "SkPixelRef::getGenerationID()"], ["android::BitmapWrapper::freePixels()", "sk_sp::operator->()"], ["android::BitmapWrapper::freePixels()", "android::Bitmap::isHardware()"], ["android::BitmapWrapper::freePixels()", "sk_sp::operator->()"], ["android::BitmapWrapper::bitmap()", "android::BitmapWrapper::assertValid()"], ["android::BitmapWrapper::assertValid()", "android::BitmapWrapper::valid()"], ["android::BitmapWrapper::getSkBitmap(SkBitmap *)", "android::BitmapWrapper::assertValid()"], ["android::BitmapWrapper::getSkBitmap(SkBitmap *)", "android::Bitmap::getSkBitmap(SkBitmap *)"], ["android::BitmapWrapper::getSkBitmap(SkBitmap *)", "sk_sp::operator->()"], ["android::BitmapWrapper::hasHardwareMipMap()", "android::Bitmap::hasHardwareMipMap()"], ["android::BitmapWrapper::hasHardwareMipMap()", "sk_sp::operator->()"], ["android::BitmapWrapper::setHasHardwareMipMap(bool)", "android::BitmapWrapper::assertValid()"], ["android::BitmapWrapper::setHasHardwareMipMap(bool)", "android::Bitmap::setHasHardwareMipMap(bool)"], ["android::BitmapWrapper::setHasHardwareMipMap(bool)", "sk_sp::operator->()"], ["android::BitmapWrapper::setAlphaType(SkAlphaType)", "android::BitmapWrapper::assertValid()"], ["android::BitmapWrapper::setAlphaType(SkAlphaType)", "android::Bitmap::setAlphaType(SkAlphaType)"], ["android::BitmapWrapper::setAlphaType(SkAlphaType)", "sk_sp::operator->()"], ["android::BitmapWrapper::setColorSpace(sk_sp<>)", "android::BitmapWrapper::assertValid()"], ["android::BitmapWrapper::setColorSpace(sk_sp<>)", "android::Bitmap::setColorSpace(sk_sp<>)"], ["android::BitmapWrapper::setColorSpace(sk_sp<>)", "sk_sp::operator->()"], ["android::BitmapWrapper::info()", "android::Bitmap::info()"], ["android::BitmapWrapper::info()", "sk_sp::operator->()"], ["android::BitmapWrapper::getAllocationByteCount()", "android::Bitmap::getAllocationByteCount()"], ["android::BitmapWrapper::getAllocationByteCount()", "sk_sp::operator->()"], ["android::BitmapWrapper::rowBytes()", "SkPixelRef::rowBytes()"], ["android::BitmapWrapper::rowBytes()", "sk_sp::operator->()"], ["android::BitmapWrapper::getGenerationID()", "SkPixelRef::getGenerationID()"], ["android::BitmapWrapper::getGenerationID()", "sk_sp::operator->()"], ["android::BitmapWrapper::isHardware()", "android::Bitmap::isHardware()"], ["android::BitmapWrapper::isHardware()", "sk_sp::operator->()"], ["android::LocalScopedBitmap::pixels()", "SkPixelRef::pixels()"], ["android::LocalScopedBitmap::pixels()", "android::BitmapWrapper::bitmap()"], ["android::LocalScopedBitmap::valid()", "android::BitmapWrapper::valid()"], ["android::bitmap::reinitBitmap(JNIEnv *, jobject, const SkImageInfo &, bool)", "android::bitmap::assert_premultiplied(const SkImageInfo &, bool)"], ["android::bitmap::createBitmap(JNIEnv *, android::Bitmap *, int, jbyteArray, jobject, int)", "android::bitmap::assert_premultiplied(const SkImageInfo &, bool)"], ["android::bitmap::createBitmap(JNIEnv *, android::Bitmap *, int, jbyteArray, jobject, int)", "android::Bitmap::info()"], ["android::bitmap::createBitmap(JNIEnv *, android::Bitmap *, int, jbyteArray, jobject, int)", "android::BitmapWrapper::bitmap()"], ["android::bitmap::toSkBitmap(jlong, SkBitmap *)", "android::BitmapWrapper::getSkBitmap(SkBitmap *)"], ["android::bitmap::toSkBitmap(jlong, SkBitmap *)", "android::LocalScopedBitmap::operator->()"], ["android::bitmap::toBitmap(jlong)", "android::BitmapWrapper::bitmap()"], ["android::bitmap::toBitmap(jlong)", "android::LocalScopedBitmap::operator->()"], ["GraphicsJNI::getNativeBitmap(JNIEnv *, jobject)", "android::LocalScopedBitmap::valid()"], ["GraphicsJNI::getNativeBitmap(JNIEnv *, jobject)", "android::BitmapWrapper::bitmap()"], ["GraphicsJNI::getNativeBitmap(JNIEnv *, jobject)", "android::LocalScopedBitmap::operator->()"], ["GraphicsJNI::getBitmapInfo(JNIEnv *, jobject, uint32_t *, bool *)", "android::BitmapWrapper::rowBytes()"], ["GraphicsJNI::getBitmapInfo(JNIEnv *, jobject, uint32_t *, bool *)", "android::LocalScopedBitmap::operator->()"], ["GraphicsJNI::getBitmapInfo(JNIEnv *, jobject, uint32_t *, bool *)", "android::BitmapWrapper::isHardware()"], ["GraphicsJNI::getBitmapInfo(JNIEnv *, jobject, uint32_t *, bool *)", "android::LocalScopedBitmap::operator->()"], ["GraphicsJNI::getBitmapInfo(JNIEnv *, jobject, uint32_t *, bool *)", "android::BitmapWrapper::info()"], ["GraphicsJNI::getBitmapInfo(JNIEnv *, jobject, uint32_t *, bool *)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_creator(JNIEnv *, jobject, jintArray, jint, jint, jint, jint, jint, jboolean, jlong)", "GraphicsJNI::SetPixels(JNIEnv *, jintArray, int, int, int, int, int, int, SkBitmap *)"], ["Bitmap_creator(JNIEnv *, jobject, jintArray, jint, jint, jint, jint, jint, jboolean, jlong)", "android::bitmap::createBitmap(JNIEnv *, android::Bitmap *, int, jbyteArray, jobject, int)"], ["Bitmap_creator(JNIEnv *, jobject, jintArray, jint, jint, jint, jint, jint, jboolean, jlong)", "getPremulBitmapCreateFlags(bool)"], ["bitmapCopyTo(SkBitmap *, SkColorType, const SkBitmap &, SkBitmap::Allocator *)", "SkPixmap::info()"], ["bitmapCopyTo(SkBitmap *, SkColorType, const SkBitmap &, SkBitmap::Allocator *)", "SkBitmap::tryAllocPixels(SkBitmap::Allocator *)"], ["Bitmap_copy(JNIEnv *, jobject, jlong, jint, jboolean)", "android::BitmapWrapper::getSkBitmap(SkBitmap *)"], ["Bitmap_copy(JNIEnv *, jobject, jlong, jint, jboolean)", "sk_sp::get()"], ["Bitmap_copy(JNIEnv *, jobject, jlong, jint, jboolean)", "android::bitmap::createBitmap(JNIEnv *, android::Bitmap *, int, jbyteArray, jobject, int)"], ["Bitmap_copy(JNIEnv *, jobject, jlong, jint, jboolean)", "getPremulBitmapCreateFlags(bool)"], ["Bitmap_copy(JNIEnv *, jobject, jlong, jint, jboolean)", "bitmapCopyTo(SkBitmap *, SkColorType, const SkBitmap &, SkBitmap::Allocator *)"], ["Bitmap_copy(JNIEnv *, jobject, jlong, jint, jboolean)", "android::bitmap::createBitmap(JNIEnv *, android::Bitmap *, int, jbyteArray, jobject, int)"], ["Bitmap_copy(JNIEnv *, jobject, jlong, jint, jboolean)", "getPremulBitmapCreateFlags(bool)"], ["Bitmap_copyAshmemImpl(JNIEnv *, SkBitmap &, SkColorType &)", "bitmapCopyTo(SkBitmap *, SkColorType, const SkBitmap &, SkBitmap::Allocator *)"], ["Bitmap_copyAshmem(JNIEnv *, jobject, jlong)", "android::BitmapWrapper::getSkBitmap(SkBitmap *)"], ["Bitmap_copyAshmem(JNIEnv *, jobject, jlong)", "Bitmap_copyAshmemImpl(JNIEnv *, SkBitmap &, SkColorType &)"], ["Bitmap_copyAshmem(JNIEnv *, jobject, jlong)", "android::bitmap::createBitmap(JNIEnv *, android::Bitmap *, int, jbyteArray, jobject, int)"], ["Bitmap_copyAshmem(JNIEnv *, jobject, jlong)", "getPremulBitmapCreateFlags(bool)"], ["Bitmap_copyAshmemConfig(JNIEnv *, jobject, jlong, jint)", "android::BitmapWrapper::getSkBitmap(SkBitmap *)"], ["Bitmap_copyAshmemConfig(JNIEnv *, jobject, jlong, jint)", "Bitmap_copyAshmemImpl(JNIEnv *, SkBitmap &, SkColorType &)"], ["Bitmap_copyAshmemConfig(JNIEnv *, jobject, jlong, jint)", "android::bitmap::createBitmap(JNIEnv *, android::Bitmap *, int, jbyteArray, jobject, int)"], ["Bitmap_copyAshmemConfig(JNIEnv *, jobject, jlong, jint)", "getPremulBitmapCreateFlags(bool)"], ["Bitmap_recycle(JNIEnv *, jobject, jlong)", "android::BitmapWrapper::freePixels()"], ["Bitmap_recycle(JNIEnv *, jobject, jlong)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_reconfigure(JNIEnv *, jobject, jlong, jint, jint, jint, jboolean)", "android::BitmapWrapper::assertValid()"], ["Bitmap_reconfigure(JNIEnv *, jobject, jlong, jint, jint, jint, jboolean)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_reconfigure(JNIEnv *, jobject, jlong, jint, jint, jint, jboolean)", "android::BitmapWrapper::getAllocationByteCount()"], ["Bitmap_reconfigure(JNIEnv *, jobject, jlong, jint, jint, jint, jboolean)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_reconfigure(JNIEnv *, jobject, jlong, jint, jint, jint, jboolean)", "android::BitmapWrapper::info()"], ["Bitmap_reconfigure(JNIEnv *, jobject, jlong, jint, jint, jint, jboolean)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_reconfigure(JNIEnv *, jobject, jlong, jint, jint, jint, jboolean)", "android::BitmapWrapper::info()"], ["Bitmap_reconfigure(JNIEnv *, jobject, jlong, jint, jint, jint, jboolean)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_reconfigure(JNIEnv *, jobject, jlong, jint, jint, jint, jboolean)", "android::BitmapWrapper::bitmap()"], ["Bitmap_reconfigure(JNIEnv *, jobject, jlong, jint, jint, jint, jboolean)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_reconfigure(JNIEnv *, jobject, jlong, jint, jint, jint, jboolean)", "android::BitmapWrapper::info()"], ["Bitmap_reconfigure(JNIEnv *, jobject, jlong, jint, jint, jint, jboolean)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_compress(JNIEnv *, jobject, jlong, jint, jint, jobject, jbyteArray)", "android::LocalScopedBitmap::valid()"], ["Bitmap_compress(JNIEnv *, jobject, jlong, jint, jint, jobject, jbyteArray)", "std::__1::unique_ptr::get()"], ["Bitmap_compress(JNIEnv *, jobject, jlong, jint, jint, jobject, jbyteArray)", "android::BitmapWrapper::bitmap()"], ["Bitmap_compress(JNIEnv *, jobject, jlong, jint, jint, jobject, jbyteArray)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_compress(JNIEnv *, jobject, jlong, jint, jint, jobject, jbyteArray)", "std::__1::unique_ptr::get()"], ["bitmapErase(SkBitmap, const SkColor4f &, const sk_sp<> &)", "sk_sp::get()"], ["Bitmap_erase(JNIEnv *, jobject, jlong, jint)", "android::BitmapWrapper::getSkBitmap(SkBitmap *)"], ["Bitmap_erase(JNIEnv *, jobject, jlong, jint)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_erase(JNIEnv *, jobject, jlong, jint)", "bitmapErase(SkBitmap, const SkColor4f &, const sk_sp<> &)"], ["Bitmap_eraseLong(JNIEnv *, jobject, jlong, jlong, jlong)", "android::BitmapWrapper::getSkBitmap(SkBitmap *)"], ["Bitmap_eraseLong(JNIEnv *, jobject, jlong, jlong, jlong)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_eraseLong(JNIEnv *, jobject, jlong, jlong, jlong)", "bitmapErase(SkBitmap, const SkColor4f &, const sk_sp<> &)"], ["Bitmap_rowBytes(JNIEnv *, jobject, jlong)", "android::BitmapWrapper::rowBytes()"], ["Bitmap_rowBytes(JNIEnv *, jobject, jlong)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_config(JNIEnv *, jobject, jlong)", "android::BitmapWrapper::isHardware()"], ["Bitmap_config(JNIEnv *, jobject, jlong)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_config(JNIEnv *, jobject, jlong)", "android::BitmapWrapper::info()"], ["Bitmap_config(JNIEnv *, jobject, jlong)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_getGenerationId(JNIEnv *, jobject, jlong)", "android::BitmapWrapper::getGenerationID()"], ["Bitmap_getGenerationId(JNIEnv *, jobject, jlong)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_isPremultiplied(JNIEnv *, jobject, jlong)", "android::BitmapWrapper::info()"], ["Bitmap_isPremultiplied(JNIEnv *, jobject, jlong)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_hasAlpha(JNIEnv *, jobject, jlong)", "android::BitmapWrapper::info()"], ["Bitmap_hasAlpha(JNIEnv *, jobject, jlong)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_setHasAlpha(JNIEnv *, jobject, jlong, jboolean, jboolean)", "android::BitmapWrapper::setAlphaType(SkAlphaType)"], ["Bitmap_setHasAlpha(JNIEnv *, jobject, jlong, jboolean, jboolean)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_setHasAlpha(JNIEnv *, jobject, jlong, jboolean, jboolean)", "android::BitmapWrapper::setAlphaType(SkAlphaType)"], ["Bitmap_setHasAlpha(JNIEnv *, jobject, jlong, jboolean, jboolean)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_setPremultiplied(JNIEnv *, jobject, jlong, jboolean)", "android::BitmapWrapper::info()"], ["Bitmap_setPremultiplied(JNIEnv *, jobject, jlong, jboolean)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_setPremultiplied(JNIEnv *, jobject, jlong, jboolean)", "android::BitmapWrapper::setAlphaType(SkAlphaType)"], ["Bitmap_setPremultiplied(JNIEnv *, jobject, jlong, jboolean)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_setPremultiplied(JNIEnv *, jobject, jlong, jboolean)", "android::BitmapWrapper::setAlphaType(SkAlphaType)"], ["Bitmap_setPremultiplied(JNIEnv *, jobject, jlong, jboolean)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_hasMipMap(JNIEnv *, jobject, jlong)", "android::BitmapWrapper::hasHardwareMipMap()"], ["Bitmap_hasMipMap(JNIEnv *, jobject, jlong)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_setHasMipMap(JNIEnv *, jobject, jlong, jboolean)", "android::BitmapWrapper::setHasHardwareMipMap(bool)"], ["Bitmap_setHasMipMap(JNIEnv *, jobject, jlong, jboolean)", "android::LocalScopedBitmap::operator->()"], ["ScopedParcel::writeData(const std::optional<>> &)", "sk_sp::operator->()"], ["ScopedParcel::writeData(const std::optional<>> &)", "sk_sp::operator->()"], ["writeBlob(AParcel *, const int32_t, const void *, bool)", "shouldUseAshmem(AParcel *, int32_t)"], ["writeBlob(AParcel *, const int32_t, const void *, bool)", "android::base::unique_fd_impl::get()"], ["writeBlob(AParcel *, const int32_t, const void *, bool)", "android::base::unique_fd_impl::get()"], ["writeBlob(AParcel *, const int32_t, const void *, bool)", "android::base::unique_fd_impl::get()"], ["writeBlob(AParcel *, const int32_t, const void *, bool)", "writeBlobFromFd(AParcel *, int32_t, int)"], ["Bitmap_createFromParcel(JNIEnv *, jobject, jobject)", "ScopedParcel::readInt32()"], ["Bitmap_createFromParcel(JNIEnv *, jobject, jobject)", "ScopedParcel::readInt32()"], ["Bitmap_createFromParcel(JNIEnv *, jobject, jobject)", "ScopedParcel::readInt32()"], ["Bitmap_createFromParcel(JNIEnv *, jobject, jobject)", "ScopedParcel::readData()"], ["Bitmap_createFromParcel(JNIEnv *, jobject, jobject)", "sk_sp::operator->()"], ["Bitmap_createFromParcel(JNIEnv *, jobject, jobject)", "sk_sp::operator->()"], ["Bitmap_createFromParcel(JNIEnv *, jobject, jobject)", "sk_sp::operator->()"], ["Bitmap_createFromParcel(JNIEnv *, jobject, jobject)", "sk_sp::operator->()"], ["Bitmap_createFromParcel(JNIEnv *, jobject, jobject)", "ScopedParcel::readInt32()"], ["Bitmap_createFromParcel(JNIEnv *, jobject, jobject)", "ScopedParcel::readInt32()"], ["Bitmap_createFromParcel(JNIEnv *, jobject, jobject)", "ScopedParcel::readInt32()"], ["Bitmap_createFromParcel(JNIEnv *, jobject, jobject)", "ScopedParcel::readInt32()"], ["Bitmap_createFromParcel(JNIEnv *, jobject, jobject)", "validateImageInfo(const SkImageInfo &, int32_t)"], ["Bitmap_createFromParcel(JNIEnv *, jobject, jobject)", "ScopedParcel::get()"], ["Bitmap_createFromParcel(JNIEnv *, jobject, jobject)", "SkPixelRef::pixels()"], ["Bitmap_createFromParcel(JNIEnv *, jobject, jobject)", "sk_sp::operator->()"], ["Bitmap_createFromParcel(JNIEnv *, jobject, jobject)", "std::__1::unique_ptr::get()"], ["Bitmap_createFromParcel(JNIEnv *, jobject, jobject)", "android::base::unique_fd_impl::get()"], ["Bitmap_createFromParcel(JNIEnv *, jobject, jobject)", "android::bitmap::createBitmap(JNIEnv *, android::Bitmap *, int, jbyteArray, jobject, int)"], ["Bitmap_createFromParcel(JNIEnv *, jobject, jobject)", "getPremulBitmapCreateFlags(bool)"], ["Bitmap_writeToParcel(JNIEnv *, jobject, jlong, jint, jobject)", "android::BitmapWrapper::getSkBitmap(SkBitmap *)"], ["Bitmap_writeToParcel(JNIEnv *, jobject, jlong, jint, jobject)", "ScopedParcel::writeInt32(int32_t)"], ["Bitmap_writeToParcel(JNIEnv *, jobject, jlong, jint, jobject)", "ScopedParcel::writeInt32(int32_t)"], ["Bitmap_writeToParcel(JNIEnv *, jobject, jlong, jint, jobject)", "ScopedParcel::writeInt32(int32_t)"], ["Bitmap_writeToParcel(JNIEnv *, jobject, jlong, jint, jobject)", "ScopedParcel::writeData(const std::optional<>> &)"], ["Bitmap_writeToParcel(JNIEnv *, jobject, jlong, jint, jobject)", "ScopedParcel::writeData(const std::optional<>> &)"], ["Bitmap_writeToParcel(JNIEnv *, jobject, jlong, jint, jobject)", "ScopedParcel::writeInt32(int32_t)"], ["Bitmap_writeToParcel(JNIEnv *, jobject, jlong, jint, jobject)", "ScopedParcel::writeInt32(int32_t)"], ["Bitmap_writeToParcel(JNIEnv *, jobject, jlong, jint, jobject)", "ScopedParcel::writeInt32(int32_t)"], ["Bitmap_writeToParcel(JNIEnv *, jobject, jlong, jint, jobject)", "SkBitmap::rowBytes()"], ["Bitmap_writeToParcel(JNIEnv *, jobject, jlong, jint, jobject)", "ScopedParcel::writeInt32(int32_t)"], ["Bitmap_writeToParcel(JNIEnv *, jobject, jlong, jint, jobject)", "android::BitmapWrapper::bitmap()"], ["Bitmap_writeToParcel(JNIEnv *, jobject, jlong, jint, jobject)", "ScopedParcel::allowFds()"], ["Bitmap_writeToParcel(JNIEnv *, jobject, jlong, jint, jobject)", "writeBlobFromFd(AParcel *, int32_t, int)"], ["Bitmap_writeToParcel(JNIEnv *, jobject, jlong, jint, jobject)", "ScopedParcel::get()"], ["Bitmap_writeToParcel(JNIEnv *, jobject, jlong, jint, jobject)", "android::Bitmap::getAllocationByteCount()"], ["Bitmap_writeToParcel(JNIEnv *, jobject, jlong, jint, jobject)", "android::BitmapWrapper::bitmap()"], ["Bitmap_writeToParcel(JNIEnv *, jobject, jlong, jint, jobject)", "writeBlob(AParcel *, const int32_t, const void *, bool)"], ["Bitmap_writeToParcel(JNIEnv *, jobject, jlong, jint, jobject)", "ScopedParcel::get()"], ["Bitmap_extractAlpha(JNIEnv *, jobject, jlong, jlong, jintArray)", "android::BitmapWrapper::getSkBitmap(SkBitmap *)"], ["Bitmap_extractAlpha(JNIEnv *, jobject, jlong, jlong, jintArray)", "android::bitmap::createBitmap(JNIEnv *, android::Bitmap *, int, jbyteArray, jobject, int)"], ["Bitmap_extractAlpha(JNIEnv *, jobject, jlong, jlong, jintArray)", "getPremulBitmapCreateFlags(bool)"], ["Bitmap_isSRGB(JNIEnv *, jobject, jlong)", "android::LocalScopedBitmap::valid()"], ["Bitmap_isSRGB(JNIEnv *, jobject, jlong)", "android::BitmapWrapper::info()"], ["Bitmap_isSRGB(JNIEnv *, jobject, jlong)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_isSRGBLinear(JNIEnv *, jobject, jlong)", "android::LocalScopedBitmap::valid()"], ["Bitmap_isSRGBLinear(JNIEnv *, jobject, jlong)", "android::BitmapWrapper::info()"], ["Bitmap_isSRGBLinear(JNIEnv *, jobject, jlong)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_isSRGBLinear(JNIEnv *, jobject, jlong)", "sk_sp::get()"], ["Bitmap_computeColorSpace(JNIEnv *, jobject, jlong)", "android::LocalScopedBitmap::valid()"], ["Bitmap_computeColorSpace(JNIEnv *, jobject, jlong)", "android::BitmapWrapper::info()"], ["Bitmap_computeColorSpace(JNIEnv *, jobject, jlong)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_computeColorSpace(JNIEnv *, jobject, jlong)", "android::BitmapWrapper::info()"], ["Bitmap_computeColorSpace(JNIEnv *, jobject, jlong)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_setColorSpace(JNIEnv *, jobject, jlong, jlong)", "android::BitmapWrapper::setColorSpace(sk_sp<>)"], ["Bitmap_setColorSpace(JNIEnv *, jobject, jlong, jlong)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_getPixel(JNIEnv *, jobject, jlong, jint, jint)", "android::BitmapWrapper::getSkBitmap(SkBitmap *)"], ["Bitmap_getColor(JNIEnv *, jobject, jlong, jint, jint)", "android::BitmapWrapper::getSkBitmap(SkBitmap *)"], ["Bitmap_getPixels(JNIEnv *, jobject, jlong, jintArray, jint, jint, jint, jint, jint, jint)", "android::BitmapWrapper::getSkBitmap(SkBitmap *)"], ["Bitmap_setPixel(JNIEnv *, jobject, jlong, jint, jint, jint)", "android::BitmapWrapper::getSkBitmap(SkBitmap *)"], ["Bitmap_setPixels(JNIEnv *, jobject, jlong, jintArray, jint, jint, jint, jint, jint, jint)", "android::BitmapWrapper::getSkBitmap(SkBitmap *)"], ["Bitmap_setPixels(JNIEnv *, jobject, jlong, jintArray, jint, jint, jint, jint, jint, jint)", "GraphicsJNI::SetPixels(JNIEnv *, jintArray, int, int, int, int, int, int, SkBitmap *)"], ["Bitmap_copyPixelsToBuffer(JNIEnv *, jobject, jlong, jobject)", "android::BitmapWrapper::getSkBitmap(SkBitmap *)"], ["Bitmap_copyPixelsFromBuffer(JNIEnv *, jobject, jlong, jobject)", "android::BitmapWrapper::getSkBitmap(SkBitmap *)"], ["Bitmap_sameAs(JNIEnv *, jobject, jlong, jlong)", "android::BitmapWrapper::isHardware()"], ["Bitmap_sameAs(JNIEnv *, jobject, jlong, jlong)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_sameAs(JNIEnv *, jobject, jlong, jlong)", "android::BitmapWrapper::isHardware()"], ["Bitmap_sameAs(JNIEnv *, jobject, jlong, jlong)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_sameAs(JNIEnv *, jobject, jlong, jlong)", "android::Bitmap::getSkBitmap(SkBitmap *)"], ["Bitmap_sameAs(JNIEnv *, jobject, jlong, jlong)", "android::BitmapWrapper::bitmap()"], ["Bitmap_sameAs(JNIEnv *, jobject, jlong, jlong)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_sameAs(JNIEnv *, jobject, jlong, jlong)", "android::Bitmap::getSkBitmap(SkBitmap *)"], ["Bitmap_sameAs(JNIEnv *, jobject, jlong, jlong)", "android::BitmapWrapper::bitmap()"], ["Bitmap_sameAs(JNIEnv *, jobject, jlong, jlong)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_prepareToDraw(JNIEnv *, jobject, jlong)", "android::LocalScopedBitmap::valid()"], ["Bitmap_prepareToDraw(JNIEnv *, jobject, jlong)", "android::BitmapWrapper::bitmap()"], ["Bitmap_prepareToDraw(JNIEnv *, jobject, jlong)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_getAllocationByteCount(JNIEnv *, jobject, jlong)", "android::BitmapWrapper::getAllocationByteCount()"], ["Bitmap_getAllocationByteCount(JNIEnv *, jobject, jlong)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_copyPreserveInternalConfig(JNIEnv *, jobject, jlong)", "android::BitmapWrapper::isHardware()"], ["Bitmap_copyPreserveInternalConfig(JNIEnv *, jobject, jlong)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_copyPreserveInternalConfig(JNIEnv *, jobject, jlong)", "android::BitmapWrapper::bitmap()"], ["Bitmap_copyPreserveInternalConfig(JNIEnv *, jobject, jlong)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_copyPreserveInternalConfig(JNIEnv *, jobject, jlong)", "android::Bitmap::getSkBitmap(SkBitmap *)"], ["Bitmap_copyPreserveInternalConfig(JNIEnv *, jobject, jlong)", "SkBitmap::info()"], ["Bitmap_copyPreserveInternalConfig(JNIEnv *, jobject, jlong)", "android::bitmap::createBitmap(JNIEnv *, android::Bitmap *, int, jbyteArray, jobject, int)"], ["Bitmap_copyPreserveInternalConfig(JNIEnv *, jobject, jlong)", "getPremulBitmapCreateFlags(bool)"], ["Bitmap_wrapHardwareBufferBitmap(JNIEnv *, jobject, jobject, jlong)", "sk_sp::get()"], ["Bitmap_wrapHardwareBufferBitmap(JNIEnv *, jobject, jobject, jlong)", "android::bitmap::createBitmap(JNIEnv *, android::Bitmap *, int, jbyteArray, jobject, int)"], ["Bitmap_wrapHardwareBufferBitmap(JNIEnv *, jobject, jobject, jlong)", "getPremulBitmapCreateFlags(bool)"], ["Bitmap_getHardwareBuffer(JNIEnv *, jobject, jlong)", "android::BitmapWrapper::isHardware()"], ["Bitmap_getHardwareBuffer(JNIEnv *, jobject, jlong)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_getHardwareBuffer(JNIEnv *, jobject, jlong)", "android::BitmapWrapper::bitmap()"], ["Bitmap_getHardwareBuffer(JNIEnv *, jobject, jlong)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_isImmutable(jlong)", "android::LocalScopedBitmap::valid()"], ["Bitmap_isImmutable(jlong)", "android::BitmapWrapper::bitmap()"], ["Bitmap_isImmutable(jlong)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_isBackedByAshmem(jlong)", "android::LocalScopedBitmap::valid()"], ["Bitmap_isBackedByAshmem(jlong)", "android::BitmapWrapper::bitmap()"], ["Bitmap_isBackedByAshmem(jlong)", "android::LocalScopedBitmap::operator->()"], ["Bitmap_setImmutable(JNIEnv *, jobject, jlong)", "android::LocalScopedBitmap::valid()"], ["Bitmap_setImmutable(JNIEnv *, jobject, jlong)", "android::BitmapWrapper::bitmap()"], ["Bitmap_setImmutable(JNIEnv *, jobject, jlong)", "android::LocalScopedBitmap::operator->()"]]}