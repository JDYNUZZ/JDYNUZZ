{"file": "/hci/chaoran_data/android-12.0.0_r31/frameworks/base/libs/hwui/jni/ImageDecoder.cpp", "jni_methods": [{"java_fun": "nCreate", "java_sig": "(JZLandroid/graphics/ImageDecoder$Source;)Landroid/graphics/ImageDecoder;", "cpp_fun": "ImageDecoder_nCreateAsset", "java_fun_full": "android.graphics.ImageDecoder android.graphics.ImageDecoder nCreate(long, boolean, android.graphics.ImageDecoder$Source)"}, {"java_fun": "nCreate", "java_sig": "(Ljava/nio/ByteBuffer;IIZLandroid/graphics/ImageDecoder$Source;)Landroid/graphics/ImageDecoder;", "cpp_fun": "ImageDecoder_nCreateByteBuffer", "java_fun_full": "android.graphics.ImageDecoder android.graphics.ImageDecoder nCreate(java.nio.ByteBuffer, int, int, boolean, android.graphics.ImageDecoder$Source)"}, {"java_fun": "nCreate", "java_sig": "([BIIZLandroid/graphics/ImageDecoder$Source;)Landroid/graphics/ImageDecoder;", "cpp_fun": "ImageDecoder_nCreateByteArray", "java_fun_full": "android.graphics.ImageDecoder android.graphics.ImageDecoder nCreate(byte[], int, int, boolean, android.graphics.ImageDecoder$Source)"}, {"java_fun": "nCreate", "java_sig": "(Ljava/io/InputStream;[BZLandroid/graphics/ImageDecoder$Source;)Landroid/graphics/ImageDecoder;", "cpp_fun": "ImageDecoder_nCreateInputStream", "java_fun_full": "android.graphics.ImageDecoder android.graphics.ImageDecoder nCreate(java.io.InputStream, byte[], boolean, android.graphics.ImageDecoder$Source)"}, {"java_fun": "nCreate", "java_sig": "(Ljava/io/FileDescriptor;JZLandroid/graphics/ImageDecoder$Source;)Landroid/graphics/ImageDecoder;", "cpp_fun": "ImageDecoder_nCreateFd", "java_fun_full": "android.graphics.ImageDecoder android.graphics.ImageDecoder nCreate(java.io.FileDescriptor, long, boolean, android.graphics.ImageDecoder$Source)"}, {"java_fun": "nDecodeBitmap", "java_sig": "(JLandroid/graphics/ImageDecoder;ZIILandroid/graphics/Rect;ZIZZZJZ)Landroid/graphics/Bitmap;", "cpp_fun": "ImageDecoder_nDecodeBitmap", "java_fun_full": "android.graphics.ImageDecoder android.graphics.Bitmap nDecodeBitmap(long, android.graphics.ImageDecoder, boolean, int, int, android.graphics.Rect, boolean, int, boolean, boolean, boolean, long, boolean)"}, {"java_fun": "nGetSampledSize", "java_sig": "(JI)Landroid/util/Size;", "cpp_fun": "ImageDecoder_nGetSampledSize", "java_fun_full": "android.graphics.ImageDecoder android.util.Size nGetSampledSize(long, int)"}, {"java_fun": "nGetPadding", "java_sig": "(JLandroid/graphics/Rect;)V", "cpp_fun": "ImageDecoder_nGetPadding", "java_fun_full": "android.graphics.ImageDecoder void nGetPadding(long, android.graphics.Rect)"}, {"java_fun": "nClose", "java_sig": "(J)V", "cpp_fun": "ImageDecoder_nClose", "java_fun_full": "android.graphics.ImageDecoder void nClose(long)"}, {"java_fun": "nGetMimeType", "java_sig": "(J)Ljava/lang/String;", "cpp_fun": "ImageDecoder_nGetMimeType", "java_fun_full": "android.graphics.ImageDecoder java.lang.String nGetMimeType(long)"}, {"java_fun": "nGetColorSpace", "java_sig": "(J)Landroid/graphics/ColorSpace;", "cpp_fun": "ImageDecoder_nGetColorSpace", "java_fun_full": "android.graphics.ImageDecoder android.graphics.ColorSpace nGetColorSpace(long)"}], "dependency": [["ImageDecoder_nDecodeBitmap(JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jobject, jboolean, jint, jboolean, jboolean, jboolean, jlong, jboolean)", "ImageDecoder_nDecodeBitmap(JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jobject, jboolean, jint, jboolean, jboolean, jboolean, jlong, jboolean)"], ["ImageDecoder_nDecodeBitmap(JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jobject, jboolean, jint, jboolean, jboolean, jboolean, jlong, jboolean)", "ImageDecoder_nDecodeBitmap(JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jobject, jboolean, jint, jboolean, jboolean, jboolean, jlong, jboolean)"], ["ImageDecoder_nDecodeBitmap(JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jobject, jboolean, jint, jboolean, jboolean, jboolean, jlong, jboolean)", "ImageDecoder_nDecodeBitmap(JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jobject, jboolean, jint, jboolean, jboolean, jboolean, jlong, jboolean)"], ["ImageDecoder_nDecodeBitmap(JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jobject, jboolean, jint, jboolean, jboolean, jboolean, jlong, jboolean)", "ImageDecoder_nDecodeBitmap(JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jobject, jboolean, jint, jboolean, jboolean, jboolean, jlong, jboolean)"], ["ImageDecoder_nDecodeBitmap(JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jobject, jboolean, jint, jboolean, jboolean, jboolean, jlong, jboolean)", "ImageDecoder_nDecodeBitmap(JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jobject, jboolean, jint, jboolean, jboolean, jboolean, jlong, jboolean)"], ["register_android_graphics_ImageDecoder(JNIEnv *)", "register_android_graphics_ImageDecoder(JNIEnv *)"], ["register_android_graphics_ImageDecoder(JNIEnv *)", "register_android_graphics_ImageDecoder(JNIEnv *)"], ["register_android_graphics_ImageDecoder(JNIEnv *)", "register_android_graphics_ImageDecoder(JNIEnv *)"], ["register_android_graphics_ImageDecoder(JNIEnv *)", "register_android_graphics_ImageDecoder(JNIEnv *)"], ["native_create(JNIEnv *, std::unique_ptr<>, jobject, jboolean)", "throw_exception(JNIEnv *, Error, const char *, jthrowable, jobject)"], ["native_create(JNIEnv *, std::unique_ptr<>, jobject, jboolean)", "get_and_clear_exception(JNIEnv *)"], ["native_create(JNIEnv *, std::unique_ptr<>, jobject, jboolean)", "throw_exception(JNIEnv *, Error, const char *, jthrowable, jobject)"], ["native_create(JNIEnv *, std::unique_ptr<>, jobject, jboolean)", "throw_exception(JNIEnv *, Error, const char *, jthrowable, jobject)"], ["native_create(JNIEnv *, std::unique_ptr<>, jobject, jboolean)", "throw_exception(JNIEnv *, Error, const char *, jthrowable, jobject)"], ["native_create(JNIEnv *, std::unique_ptr<>, jobject, jboolean)", "get_and_clear_exception(JNIEnv *)"], ["native_create(JNIEnv *, std::unique_ptr<>, jobject, jboolean)", "throw_exception(JNIEnv *, Error, const char *, jthrowable, jobject)"], ["native_create(JNIEnv *, std::unique_ptr<>, jobject, jboolean)", "SkAndroidCodec::MakeFromCodec(std::unique_ptr<>)"], ["native_create(JNIEnv *, std::unique_ptr<>, jobject, jboolean)", "throw_exception(JNIEnv *, Error, const char *, jthrowable, jobject)"], ["ImageDecoder_nCreateFd(JNIEnv *, jobject, jobject, jlong, jboolean, jobject)", "throw_exception(JNIEnv *, Error, const char *, jthrowable, jobject)"], ["ImageDecoder_nCreateFd(JNIEnv *, jobject, jobject, jlong, jboolean, jobject)", "throw_exception(JNIEnv *, Error, const char *, jthrowable, jobject)"], ["ImageDecoder_nCreateFd(JNIEnv *, jobject, jobject, jlong, jboolean, jobject)", "native_create(JNIEnv *, std::unique_ptr<>, jobject, jboolean)"], ["ImageDecoder_nCreateInputStream(JNIEnv *, jobject, jobject, jbyteArray, jboolean, jobject)", "throw_exception(JNIEnv *, Error, const char *, jthrowable, jobject)"], ["ImageDecoder_nCreateInputStream(JNIEnv *, jobject, jobject, jbyteArray, jboolean, jobject)", "native_create(JNIEnv *, std::unique_ptr<>, jobject, jboolean)"], ["ImageDecoder_nCreateAsset(JNIEnv *, jobject, jlong, jboolean, jobject)", "native_create(JNIEnv *, std::unique_ptr<>, jobject, jboolean)"], ["ImageDecoder_nCreateByteBuffer(JNIEnv *, jobject, jobject, jint, jint, jboolean, jobject)", "throw_exception(JNIEnv *, Error, const char *, jthrowable, jobject)"], ["ImageDecoder_nCreateByteBuffer(JNIEnv *, jobject, jobject, jint, jint, jboolean, jobject)", "native_create(JNIEnv *, std::unique_ptr<>, jobject, jboolean)"], ["ImageDecoder_nCreateByteArray(JNIEnv *, jobject, jbyteArray, jint, jint, jboolean, jobject)", "native_create(JNIEnv *, std::unique_ptr<>, jobject, jboolean)"], ["ImageDecoder_nDecodeBitmap(JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jobject, jboolean, jint, jboolean, jboolean, jboolean, jlong, jboolean)", "get_and_clear_exception(JNIEnv *)"], ["ImageDecoder_nDecodeBitmap(JNIEnv *, jobject, jlong, jobject, jboolean, jint, jint, jobject, jboolean, jint, jboolean, jboolean, jboolean, jlong, jboolean)", "postProcessAndRelease(JNIEnv *, jobject, std::unique_ptr<>)"]]}