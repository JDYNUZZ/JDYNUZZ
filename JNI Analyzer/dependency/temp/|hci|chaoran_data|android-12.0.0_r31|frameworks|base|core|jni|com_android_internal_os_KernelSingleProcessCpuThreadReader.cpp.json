{"file": "/hci/chaoran_data/android-12.0.0_r31/frameworks/base/core/jni/com_android_internal_os_KernelSingleProcessCpuThreadReader.cpp", "jni_methods": [{"java_fun": "getCpuFrequencyCount", "java_sig": "(Lcom/android/internal/os/KernelSingleProcessCpuThreadReader$CpuTimeInStateReader;)I", "cpp_fun": "getCpuFrequencyCount", "java_fun_full": "com.android.internal.os.KernelSingleProcessCpuThreadReader int getCpuFrequencyCount(com.android.internal.os.KernelSingleProcessCpuThreadReader$CpuTimeInStateReader)"}, {"java_fun": "startTrackingProcessCpuTimes", "java_sig": "(ILcom/android/internal/os/KernelSingleProcessCpuThreadReader$CpuTimeInStateReader;)Z", "cpp_fun": "startTrackingProcessCpuTimes", "java_fun_full": "com.android.internal.os.KernelSingleProcessCpuThreadReader boolean startTrackingProcessCpuTimes(int, com.android.internal.os.KernelSingleProcessCpuThreadReader$CpuTimeInStateReader)"}, {"java_fun": "startAggregatingThreadCpuTimes", "java_sig": "([ILcom/android/internal/os/KernelSingleProcessCpuThreadReader$CpuTimeInStateReader;)Z", "cpp_fun": "startAggregatingThreadCpuTimes", "java_fun_full": "com.android.internal.os.KernelSingleProcessCpuThreadReader boolean startAggregatingThreadCpuTimes(int[], com.android.internal.os.KernelSingleProcessCpuThreadReader$CpuTimeInStateReader)"}, {"java_fun": "readProcessCpuUsage", "java_sig": "(I[J[JLcom/android/internal/os/KernelSingleProcessCpuThreadReader$CpuTimeInStateReader;)Z", "cpp_fun": "readProcessCpuUsage", "java_fun_full": "com.android.internal.os.KernelSingleProcessCpuThreadReader boolean readProcessCpuUsage(int, long[], long[], com.android.internal.os.KernelSingleProcessCpuThreadReader$CpuTimeInStateReader)"}], "dependency": [["android::BpfCpuTimeInStateReader::getCpuFrequencyCount()", "std::__1::vector::vector(const std::vector<> &)"], ["android::BpfCpuTimeInStateReader::startTrackingProcessCpuTimes(pid_t)", "android::bpf::startTrackingProcessCpuTimes(pid_t)"], ["android::BpfCpuTimeInStateReader::startAggregatingTaskCpuTimes(pid_t, uint16_t)", "android::bpf::startAggregatingTaskCpuTimes(pid_t, uint16_t)"], ["android::BpfCpuTimeInStateReader::getAggregatedTaskCpuFreqTimes(pid_t, const std::vector<> &)", "android::bpf::getAggregatedTaskCpuFreqTimes(pid_t, const std::vector<> &)"], ["android::getCpuFrequencyCount(JNIEnv *, jclass, jobject)", "android::getCpuTimeInStateReader(JNIEnv *, jobject)"], ["android::getCpuFrequencyCount(JNIEnv *, jclass, jobject)", "android::ICpuTimeInStateReader::getCpuFrequencyCount()"], ["android::startTrackingProcessCpuTimes(JNIEnv *, jclass, jint, jobject)", "android::getCpuTimeInStateReader(JNIEnv *, jobject)"], ["android::startTrackingProcessCpuTimes(JNIEnv *, jclass, jint, jobject)", "android::ICpuTimeInStateReader::startTrackingProcessCpuTimes(pid_t)"], ["android::startAggregatingThreadCpuTimes(JNIEnv *, jclass, jintArray, jobject)", "android::getCpuTimeInStateReader(JNIEnv *, jobject)"], ["android::startAggregatingThreadCpuTimes(JNIEnv *, jclass, jintArray, jobject)", "android::ICpuTimeInStateReader::startAggregatingTaskCpuTimes(pid_t, uint16_t)"], ["android::readProcessCpuUsage(JNIEnv *, jclass, jint, jlongArray, jlongArray, jobject)", "android::getCpuTimeInStateReader(JNIEnv *, jobject)"], ["android::readProcessCpuUsage(JNIEnv *, jclass, jint, jlongArray, jlongArray, jobject)", "android::ICpuTimeInStateReader::getCpuFrequencyCount()"], ["android::readProcessCpuUsage(JNIEnv *, jclass, jint, jlongArray, jlongArray, jobject)", "android::ICpuTimeInStateReader::getAggregatedTaskCpuFreqTimes(pid_t, const std::vector<> &)"], ["android::readProcessCpuUsage(JNIEnv *, jclass, jint, jlongArray, jlongArray, jobject)", "android::flattenTimeInStateData(ScopedLongArrayRW &, const std::vector<>> &)"], ["android::readProcessCpuUsage(JNIEnv *, jclass, jint, jlongArray, jlongArray, jobject)", "android::flattenTimeInStateData(ScopedLongArrayRW &, const std::vector<>> &)"], ["android::MockCpuTimeInStateReader::getAggregatedTaskCpuFreqTimes(pid_t, const std::vector<> &)", "std::__1::vector::emplace_back(std::vector<> &)"], ["android::MockCpuTimeInStateReader::getAggregatedTaskCpuFreqTimes(pid_t, const std::vector<> &)", "std::__1::unordered_map::emplace(unsigned short &, std::vector<>> &)"]]}