{"file": "/hci/chaoran_data/android-12.0.0_r31/frameworks/base/core/jni/com_android_internal_os_Zygote.cpp", "jni_methods": [{"java_fun": "nativeForkAndSpecialize", "java_sig": "(II[II[[IILjava/lang/String;Ljava/lang/String;[I[IZLjava/lang/String;Ljava/lang/String;Z[Ljava/lang/String;[Ljava/lang/String;ZZ)I", "cpp_fun": "com_android_internal_os_Zygote_nativeForkAndSpecialize", "java_fun_full": "com.android.internal.os.Zygote int nativeForkAndSpecialize(int, int, int[], int, int[][], int, java.lang.String, java.lang.String, int[], int[], boolean, java.lang.String, java.lang.String, boolean, java.lang.String[], java.lang.String[], boolean, boolean)"}, {"java_fun": "nativeForkSystemServer", "java_sig": "(II[II[[IJJ)I", "cpp_fun": "com_android_internal_os_Zygote_nativeForkSystemServer", "java_fun_full": "com.android.internal.os.Zygote int nativeForkSystemServer(int, int, int[], int, int[][], long, long)"}, {"java_fun": "nativeAllowFileAcrossFork", "java_sig": "(Ljava/lang/String;)V", "cpp_fun": "com_android_internal_os_Zygote_nativeAllowFileAcrossFork", "java_fun_full": "com.android.internal.os.Zygote void nativeAllowFileAcrossFork(java.lang.String)"}, {"java_fun": "nativePreApplicationInit", "java_sig": "()V", "cpp_fun": "com_android_internal_os_Zygote_nativePreApplicationInit", "java_fun_full": "com.android.internal.os.Zygote void nativePreApplicationInit()"}, {"java_fun": "nativeInstallSeccompUidGidFilter", "java_sig": "(II)V", "cpp_fun": "com_android_internal_os_Zygote_nativeInstallSeccompUidGidFilter", "java_fun_full": "com.android.internal.os.Zygote void nativeInstallSeccompUidGidFilter(int, int)"}, {"java_fun": "nativeForkApp", "java_sig": "(II[IZZ)I", "cpp_fun": "com_android_internal_os_Zygote_nativeForkApp", "java_fun_full": "com.android.internal.os.Zygote int nativeForkApp(int, int, int[], boolean, boolean)"}, {"java_fun": "nativeAddUsapTableEntry", "java_sig": "(II)V", "cpp_fun": "com_android_internal_os_Zygote_nativeAddUsapTableEntry", "java_fun_full": "com.android.internal.os.Zygote void nativeAddUsapTableEntry(int, int)"}, {"java_fun": "nativeSpecializeAppProcess", "java_sig": "(II[II[[IILjava/lang/String;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;Z[Ljava/lang/String;[Ljava/lang/String;ZZ)V", "cpp_fun": "com_android_internal_os_Zygote_nativeSpecializeAppProcess", "java_fun_full": "com.android.internal.os.Zygote void nativeSpecializeAppProcess(int, int, int[], int, int[][], int, java.lang.String, java.lang.String, boolean, java.lang.String, java.lang.String, boolean, java.lang.String[], java.lang.String[], boolean, boolean)"}, {"java_fun": "nativeInitNativeState", "java_sig": "(Z)V", "cpp_fun": "com_android_internal_os_Zygote_nativeInitNativeState", "java_fun_full": "com.android.internal.os.Zygote void nativeInitNativeState(boolean)"}, {"java_fun": "nativeGetUsapPipeFDs", "java_sig": "()[I", "cpp_fun": "com_android_internal_os_Zygote_nativeGetUsapPipeFDs", "java_fun_full": "com.android.internal.os.Zygote int[] nativeGetUsapPipeFDs()"}, {"java_fun": "nativeAddUsapTableEntry", "java_sig": "(II)V", "cpp_fun": "com_android_internal_os_Zygote_nativeAddUsapTableEntry", "java_fun_full": "com.android.internal.os.Zygote void nativeAddUsapTableEntry(int, int)"}, {"java_fun": "nativeRemoveUsapTableEntry", "java_sig": "(I)Z", "cpp_fun": "com_android_internal_os_Zygote_nativeRemoveUsapTableEntry", "java_fun_full": "com.android.internal.os.Zygote boolean nativeRemoveUsapTableEntry(int)"}, {"java_fun": "nativeGetUsapPoolEventFD", "java_sig": "()I", "cpp_fun": "com_android_internal_os_Zygote_nativeGetUsapPoolEventFD", "java_fun_full": "com.android.internal.os.Zygote int nativeGetUsapPoolEventFD()"}, {"java_fun": "nativeGetUsapPoolCount", "java_sig": "()I", "cpp_fun": "com_android_internal_os_Zygote_nativeGetUsapPoolCount", "java_fun_full": "com.android.internal.os.Zygote int nativeGetUsapPoolCount()"}, {"java_fun": "nativeEmptyUsapPool", "java_sig": "()V", "cpp_fun": "com_android_internal_os_Zygote_nativeEmptyUsapPool", "java_fun_full": "com.android.internal.os.Zygote void nativeEmptyUsapPool()"}, {"java_fun": "nativeBlockSigTerm", "java_sig": "()V", "cpp_fun": "com_android_internal_os_Zygote_nativeBlockSigTerm", "java_fun_full": "com.android.internal.os.Zygote void nativeBlockSigTerm()"}, {"java_fun": "nativeUnblockSigTerm", "java_sig": "()V", "cpp_fun": "com_android_internal_os_Zygote_nativeUnblockSigTerm", "java_fun_full": "com.android.internal.os.Zygote void nativeUnblockSigTerm()"}, {"java_fun": "nativeBoostUsapPriority", "java_sig": "()V", "cpp_fun": "com_android_internal_os_Zygote_nativeBoostUsapPriority", "java_fun_full": "com.android.internal.os.Zygote void nativeBoostUsapPriority()"}, {"java_fun": "nativeParseSigChld", "java_sig": "([BI[I)I", "cpp_fun": "com_android_internal_os_Zygote_nativeParseSigChld", "java_fun_full": "com.android.internal.os.Zygote int nativeParseSigChld(byte[], int, int[])"}, {"java_fun": "nativeSupportsMemoryTagging", "java_sig": "()Z", "cpp_fun": "com_android_internal_os_Zygote_nativeSupportsMemoryTagging", "java_fun_full": "com.android.internal.os.Zygote boolean nativeSupportsMemoryTagging()"}, {"java_fun": "nativeSupportsTaggedPointers", "java_sig": "()Z", "cpp_fun": "com_android_internal_os_Zygote_nativeSupportsTaggedPointers", "java_fun_full": "com.android.internal.os.Zygote boolean nativeSupportsTaggedPointers()"}, {"java_fun": "nativeCurrentTaggingLevel", "java_sig": "()I", "cpp_fun": "com_android_internal_os_Zygote_nativeCurrentTaggingLevel", "java_fun_full": "com.android.internal.os.Zygote int nativeCurrentTaggingLevel()"}, {"java_fun": "nativeMarkOpenedFilesBeforePreload", "java_sig": "()V", "cpp_fun": "com_android_internal_os_Zygote_nativeMarkOpenedFilesBeforePreload", "java_fun_full": "com.android.internal.os.Zygote void nativeMarkOpenedFilesBeforePreload()"}, {"java_fun": "nativeAllowFilesOpenedByPreload", "java_sig": "()V", "cpp_fun": "com_android_internal_os_Zygote_nativeAllowFilesOpenedByPreload", "java_fun_full": "com.android.internal.os.Zygote void nativeAllowFilesOpenedByPreload()"}], "dependency": [["UsapTableEntry::SetIfInvalid(int32_t, int32_t)", "android::com_android_internal_os_Zygote_nativeForkSystemServer(JNIEnv *, jclass, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong)"], ["isolateAppData(JNIEnv *, const std::vector<> &, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "isolateAppData(JNIEnv *, const std::vector<> &, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)"], ["isolateAppData(JNIEnv *, const std::vector<> &, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "isolateAppData(JNIEnv *, const std::vector<> &, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)"], ["WaitUntilDirReady(const std::string &, (anonymous namespace)::fail_fn_t)", "WaitUntilDirReady(const std::string &, (anonymous namespace)::fail_fn_t)"], ["AddUsapTableEntry(pid_t, int)", "AddUsapTableEntry(pid_t, int)"], ["AddUsapTableEntry(pid_t, int)", "AddUsapTableEntry(pid_t, int)"], ["android::com_android_internal_os_Zygote_nativeForkSystemServer(JNIEnv *, jclass, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong)", "android::com_android_internal_os_Zygote_nativeForkSystemServer(JNIEnv *, jclass, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong)"], ["android::register_com_android_internal_os_Zygote(JNIEnv *)", "android::register_com_android_internal_os_Zygote(JNIEnv *)"], ["android::register_com_android_internal_os_Zygote(JNIEnv *)", "android::register_com_android_internal_os_Zygote(JNIEnv *)"], ["UsapTableEntry::ClearForPID(int32_t)", "UsapTableEntry::EntryStorage::EntryStorage(const (anonymous namespace)::UsapTableEntry::EntryStorage &)"], ["UsapTableEntry::Clear()", "UsapTableEntry::EntryStorage::operator!=(const (anonymous namespace)::UsapTableEntry::EntryStorage &)"], ["UsapTableEntry::Clear()", "UsapTableEntry::EntryStorage::EntryStorage(const (anonymous namespace)::UsapTableEntry::EntryStorage &)"], ["UsapTableEntry::Invalidate()", "UsapTableEntry::EntryStorage::EntryStorage(const (anonymous namespace)::UsapTableEntry::EntryStorage &)"], ["UsapTableEntry::GetValues()", "UsapTableEntry::EntryStorage::operator!=(const (anonymous namespace)::UsapTableEntry::EntryStorage &)"], ["UsapTableEntry::SetIfInvalid(int32_t, int32_t)", "UsapTableEntry::EntryStorage::EntryStorage(const (anonymous namespace)::UsapTableEntry::EntryStorage &)"], ["UsapTableEntry::SetIfInvalid(int32_t, int32_t)", "UsapTableEntry::EntryStorage::EntryStorage(const (anonymous namespace)::UsapTableEntry::EntryStorage &)"], ["SigChldHandler(int, siginfo_t *, void *)", "sendSigChildStatus(const pid_t, const uid_t, const int)"], ["SigChldHandler(int, siginfo_t *, void *)", "RemoveUsapTableEntry(pid_t)"], ["SigChldHandler(int, siginfo_t *, void *)", "RemoveUsapTableEntry(pid_t)"], ["PrepareDirIfNotPresent(const std::string &, mode_t, uid_t, gid_t, (anonymous namespace)::fail_fn_t)", "PrepareDir(const std::string &, mode_t, uid_t, gid_t, (anonymous namespace)::fail_fn_t)"], ["BindMount(const std::string &, const std::string &, (anonymous namespace)::fail_fn_t)", "BindMount(const std::string &, const std::string &)"], ["MountEmulatedStorage(uid_t, jint, bool, (anonymous namespace)::fail_fn_t)", "ensureInAppMountNamespace((anonymous namespace)::fail_fn_t)"], ["MountEmulatedStorage(uid_t, jint, bool, (anonymous namespace)::fail_fn_t)", "PrepareDir(const std::string &, mode_t, uid_t, gid_t, (anonymous namespace)::fail_fn_t)"], ["MountEmulatedStorage(uid_t, jint, bool, (anonymous namespace)::fail_fn_t)", "PrepareDir(const std::string &, mode_t, uid_t, gid_t, (anonymous namespace)::fail_fn_t)"], ["MountEmulatedStorage(uid_t, jint, bool, (anonymous namespace)::fail_fn_t)", "BindMount(const std::string &, const std::string &, (anonymous namespace)::fail_fn_t)"], ["MountEmulatedStorage(uid_t, jint, bool, (anonymous namespace)::fail_fn_t)", "BindMount(const std::string &, const std::string &, (anonymous namespace)::fail_fn_t)"], ["MountEmulatedStorage(uid_t, jint, bool, (anonymous namespace)::fail_fn_t)", "BindMount(const std::string &, const std::string &, (anonymous namespace)::fail_fn_t)"], ["MountEmulatedStorage(uid_t, jint, bool, (anonymous namespace)::fail_fn_t)", "BindMount(const std::string &, const std::string &, (anonymous namespace)::fail_fn_t)"], ["SetThreadName(const std::string &)", "android::base::SetDefaultTag(const std::string &)"], ["ExtractJString(JNIEnv *, const char *, jstring, jstring)", "android::zygote::ZygoteFailure(JNIEnv *, const char *, jstring, const std::string &)"], ["ExtractJIntArray(JNIEnv *, const char *, jstring, jintArray)", "android::zygote::ZygoteFailure(JNIEnv *, const char *, jstring, const std::string &)"], ["BlockSignal(int, (anonymous namespace)::fail_fn_t)", "()"], ["UnblockSignal(int, (anonymous namespace)::fail_fn_t)", "()"], ["ClearUsapTable()", "UsapTableEntry::Clear()"], ["createAndMountAppData(std::string_view, std::string_view, std::string_view, std::string_view, (anonymous namespace)::fail_fn_t, bool)", "PrepareDir(const std::string &, mode_t, uid_t, gid_t, (anonymous namespace)::fail_fn_t)"], ["createAndMountAppData(std::string_view, std::string_view, std::string_view, std::string_view, (anonymous namespace)::fail_fn_t, bool)", "BindMount(const std::string &, const std::string &, (anonymous namespace)::fail_fn_t)"], ["createAndMountAppData(std::string_view, std::string_view, std::string_view, std::string_view, (anonymous namespace)::fail_fn_t, bool)", "BindMount(const std::string &, const std::string &)"], ["mountAppData(std::string_view, std::string_view, std::string_view, std::string_view, (anonymous namespace)::fail_fn_t)", "BindMount(const std::string &, const std::string &, (anonymous namespace)::fail_fn_t)"], ["isolateAppDataPerPackage(int, std::string_view, std::string_view, long long, std::string_view, std::string_view, (anonymous namespace)::fail_fn_t)", "createAndMountAppData(std::string_view, std::string_view, std::string_view, std::string_view, (anonymous namespace)::fail_fn_t, bool)"], ["isolateAppDataPerPackage(int, std::string_view, std::string_view, long long, std::string_view, std::string_view, (anonymous namespace)::fail_fn_t)", "getAppDataDirName(std::string_view, std::string_view, long long, (anonymous namespace)::fail_fn_t)"], ["isolateAppDataPerPackage(int, std::string_view, std::string_view, long long, std::string_view, std::string_view, (anonymous namespace)::fail_fn_t)", "createAndMountAppData(std::string_view, std::string_view, std::string_view, std::string_view, (anonymous namespace)::fail_fn_t, bool)"], ["isolateAppDataPerPackage(int, std::string_view, std::string_view, long long, std::string_view, std::string_view, (anonymous namespace)::fail_fn_t)", "getAppDataDirName(std::string_view, std::string_view, long long, (anonymous namespace)::fail_fn_t)"], ["isolateAppDataPerPackage(int, std::string_view, std::string_view, long long, std::string_view, std::string_view, (anonymous namespace)::fail_fn_t)", "mountAppData(std::string_view, std::string_view, std::string_view, std::string_view, (anonymous namespace)::fail_fn_t)"], ["relabelAllDirs(const char *, security_context_t, (anonymous namespace)::fail_fn_t)", "relabelDir(const char *, security_context_t, (anonymous namespace)::fail_fn_t)"], ["isolateAppData(JNIEnv *, const std::vector<> &, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "MountAppDataTmpFs(const std::string &, (anonymous namespace)::fail_fn_t)"], ["isolateAppData(JNIEnv *, const std::vector<> &, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "MountAppDataTmpFs(const std::string &, (anonymous namespace)::fail_fn_t)"], ["isolateAppData(JNIEnv *, const std::vector<> &, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "MountAppDataTmpFs(const std::string &, (anonymous namespace)::fail_fn_t)"], ["isolateAppData(JNIEnv *, const std::vector<> &, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "MountAppDataTmpFs(const std::string &, (anonymous namespace)::fail_fn_t)"], ["isolateAppData(JNIEnv *, const std::vector<> &, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "MountAppDataTmpFs(const std::string &, (anonymous namespace)::fail_fn_t)"], ["isolateAppData(JNIEnv *, const std::vector<> &, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "PrepareDirIfNotPresent(const std::string &, mode_t, uid_t, gid_t, (anonymous namespace)::fail_fn_t)"], ["isolateAppData(JNIEnv *, const std::vector<> &, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "PrepareDirIfNotPresent(const std::string &, mode_t, uid_t, gid_t, (anonymous namespace)::fail_fn_t)"], ["isolateAppData(JNIEnv *, const std::vector<> &, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "PrepareDirIfNotPresent(const std::string &, mode_t, uid_t, gid_t, (anonymous namespace)::fail_fn_t)"], ["isolateAppData(JNIEnv *, const std::vector<> &, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "PrepareDirIfNotPresent(const std::string &, mode_t, uid_t, gid_t, (anonymous namespace)::fail_fn_t)"], ["isolateAppData(JNIEnv *, const std::vector<> &, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "PrepareDirIfNotPresent(const std::string &, mode_t, uid_t, gid_t, (anonymous namespace)::fail_fn_t)"], ["isolateAppData(JNIEnv *, const std::vector<> &, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "PrepareDirIfNotPresent(const std::string &, mode_t, uid_t, gid_t, (anonymous namespace)::fail_fn_t)"], ["isolateAppData(JNIEnv *, const std::vector<> &, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "PrepareDirIfNotPresent(const std::string &, mode_t, uid_t, gid_t, (anonymous namespace)::fail_fn_t)"], ["isolateAppData(JNIEnv *, const std::vector<> &, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "PrepareDirIfNotPresent(const std::string &, mode_t, uid_t, gid_t, (anonymous namespace)::fail_fn_t)"], ["isolateAppData(JNIEnv *, const std::vector<> &, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "isolateAppDataPerPackage(int, std::string_view, std::string_view, long long, std::string_view, std::string_view, (anonymous namespace)::fail_fn_t)"], ["isolateAppData(JNIEnv *, const std::vector<> &, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "relabelAllDirs(const char *, security_context_t, (anonymous namespace)::fail_fn_t)"], ["isolateAppData(JNIEnv *, const std::vector<> &, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "relabelDir(const char *, security_context_t, (anonymous namespace)::fail_fn_t)"], ["isolateAppData(JNIEnv *, const std::vector<> &, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "relabelDir(const char *, security_context_t, (anonymous namespace)::fail_fn_t)"], ["isolateAppData(JNIEnv *, const std::vector<> &, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "relabelAllDirs(const char *, security_context_t, (anonymous namespace)::fail_fn_t)"], ["isolateAppData(JNIEnv *, const std::vector<> &, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "relabelDir(const char *, security_context_t, (anonymous namespace)::fail_fn_t)"], ["isolateAppData(JNIEnv *, const std::vector<> &, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "relabelAllDirs(const char *, security_context_t, (anonymous namespace)::fail_fn_t)"], ["isolateAppData(JNIEnv *, const std::vector<> &, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "relabelDir(const char *, security_context_t, (anonymous namespace)::fail_fn_t)"], ["isolateAppData(JNIEnv *, const std::vector<> &, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "relabelAllDirs(const char *, security_context_t, (anonymous namespace)::fail_fn_t)"], ["isolateAppData(JNIEnv *, const std::vector<> &, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "relabelDir(const char *, security_context_t, (anonymous namespace)::fail_fn_t)"], ["isolateAppData(JNIEnv *, jobjectArray, jobjectArray, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "insertPackagesToMergedList(JNIEnv *, std::vector<> &, jobjectArray, const char *, jstring, (anonymous namespace)::fail_fn_t)"], ["isolateAppData(JNIEnv *, jobjectArray, jobjectArray, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "insertPackagesToMergedList(JNIEnv *, std::vector<> &, jobjectArray, const char *, jstring, (anonymous namespace)::fail_fn_t)"], ["isolateAppData(JNIEnv *, jobjectArray, jobjectArray, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "isolateAppData(JNIEnv *, const std::vector<> &, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)"], ["isolateJitProfile(JNIEnv *, jobjectArray, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "MountAppDataTmpFs(const std::string &, (anonymous namespace)::fail_fn_t)"], ["isolateJitProfile(JNIEnv *, jobjectArray, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "MountAppDataTmpFs(const std::string &, (anonymous namespace)::fail_fn_t)"], ["isolateJitProfile(JNIEnv *, jobjectArray, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "PrepareDir(const std::string &, mode_t, uid_t, gid_t, (anonymous namespace)::fail_fn_t)"], ["isolateJitProfile(JNIEnv *, jobjectArray, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "PrepareDir(const std::string &, mode_t, uid_t, gid_t, (anonymous namespace)::fail_fn_t)"], ["isolateJitProfile(JNIEnv *, jobjectArray, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "BindMount(const std::string &, const std::string &, (anonymous namespace)::fail_fn_t)"], ["isolateJitProfile(JNIEnv *, jobjectArray, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "PrepareDir(const std::string &, mode_t, uid_t, gid_t, (anonymous namespace)::fail_fn_t)"], ["isolateJitProfile(JNIEnv *, jobjectArray, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "BindMount(const std::string &, const std::string &, (anonymous namespace)::fail_fn_t)"], ["BindMountStorageToLowerFs(const userid_t, const uid_t, const char *, const char *, (anonymous namespace)::fail_fn_t)", "WaitUntilDirReady(const std::string &, (anonymous namespace)::fail_fn_t)"], ["BindMountStorageToLowerFs(const userid_t, const uid_t, const char *, const char *, (anonymous namespace)::fail_fn_t)", "PrepareDirIfNotPresent(const std::string &, mode_t, uid_t, gid_t, (anonymous namespace)::fail_fn_t)"], ["BindMountStorageToLowerFs(const userid_t, const uid_t, const char *, const char *, (anonymous namespace)::fail_fn_t)", "BindMount(const std::string &, const std::string &, (anonymous namespace)::fail_fn_t)"], ["BindMountStorageDirs(JNIEnv *, jobjectArray, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "MountAppDataTmpFs(const std::string &, (anonymous namespace)::fail_fn_t)"], ["BindMountStorageDirs(JNIEnv *, jobjectArray, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "MountAppDataTmpFs(const std::string &, (anonymous namespace)::fail_fn_t)"], ["BindMountStorageDirs(JNIEnv *, jobjectArray, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "BindMountStorageToLowerFs(const userid_t, const uid_t, const char *, const char *, (anonymous namespace)::fail_fn_t)"], ["BindMountStorageDirs(JNIEnv *, jobjectArray, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)", "BindMountStorageToLowerFs(const userid_t, const uid_t, const char *, const char *, (anonymous namespace)::fail_fn_t)"], ["SpecializeCommon(JNIEnv *, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong, jint, jstring, jstring, bool, bool, jstring, jstring, bool, jobjectArray, jobjectArray, bool, bool)", "EnableKeepCapabilities((anonymous namespace)::fail_fn_t)"], ["SpecializeCommon(JNIEnv *, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong, jint, jstring, jstring, bool, bool, jstring, jstring, bool, jobjectArray, jobjectArray, bool, bool)", "SetInheritable(uint64_t, (anonymous namespace)::fail_fn_t)"], ["SpecializeCommon(JNIEnv *, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong, jint, jstring, jstring, bool, bool, jstring, jstring, bool, jobjectArray, jobjectArray, bool, bool)", "DropCapabilitiesBoundingSet((anonymous namespace)::fail_fn_t)"], ["SpecializeCommon(JNIEnv *, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong, jint, jstring, jstring, bool, bool, jstring, jstring, bool, jobjectArray, jobjectArray, bool, bool)", "MountEmulatedStorage(uid_t, jint, bool, (anonymous namespace)::fail_fn_t)"], ["SpecializeCommon(JNIEnv *, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong, jint, jstring, jstring, bool, bool, jstring, jstring, bool, jobjectArray, jobjectArray, bool, bool)", "ensureInAppMountNamespace((anonymous namespace)::fail_fn_t)"], ["SpecializeCommon(JNIEnv *, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong, jint, jstring, jstring, bool, bool, jstring, jstring, bool, jobjectArray, jobjectArray, bool, bool)", "isolateAppData(JNIEnv *, jobjectArray, jobjectArray, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)"], ["SpecializeCommon(JNIEnv *, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong, jint, jstring, jstring, bool, bool, jstring, jstring, bool, jobjectArray, jobjectArray, bool, bool)", "isolateJitProfile(JNIEnv *, jobjectArray, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)"], ["SpecializeCommon(JNIEnv *, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong, jint, jstring, jstring, bool, bool, jstring, jstring, bool, jobjectArray, jobjectArray, bool, bool)", "BindMountStorageDirs(JNIEnv *, jobjectArray, uid_t, const char *, jstring, (anonymous namespace)::fail_fn_t)"], ["SpecializeCommon(JNIEnv *, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong, jint, jstring, jstring, bool, bool, jstring, jstring, bool, jobjectArray, jobjectArray, bool, bool)", "SetGids(JNIEnv *, jintArray, jboolean, (anonymous namespace)::fail_fn_t)"], ["SpecializeCommon(JNIEnv *, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong, jint, jstring, jstring, bool, bool, jstring, jstring, bool, jobjectArray, jobjectArray, bool, bool)", "SetRLimits(JNIEnv *, jobjectArray, (anonymous namespace)::fail_fn_t)"], ["SpecializeCommon(JNIEnv *, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong, jint, jstring, jstring, bool, bool, jstring, jstring, bool, jobjectArray, jobjectArray, bool, bool)", "_JNIEnv::ExceptionClear()"], ["SpecializeCommon(JNIEnv *, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong, jint, jstring, jstring, bool, bool, jstring, jstring, bool, jobjectArray, jobjectArray, bool, bool)", "SetUpSeccompFilter(uid_t, bool)"], ["SpecializeCommon(JNIEnv *, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong, jint, jstring, jstring, bool, bool, jstring, jstring, bool, jobjectArray, jobjectArray, bool, bool)", "SetSchedulerPolicy((anonymous namespace)::fail_fn_t, bool)"], ["SpecializeCommon(JNIEnv *, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong, jint, jstring, jstring, bool, bool, jstring, jstring, bool, jobjectArray, jobjectArray, bool, bool)", "RuntimeAbort(JNIEnv *, int, const char *)"], ["SpecializeCommon(JNIEnv *, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong, jint, jstring, jstring, bool, bool, jstring, jstring, bool, jobjectArray, jobjectArray, bool, bool)", "RuntimeAbort(JNIEnv *, int, const char *)"], ["SpecializeCommon(JNIEnv *, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong, jint, jstring, jstring, bool, bool, jstring, jstring, bool, jobjectArray, jobjectArray, bool, bool)", "EnableDebugger()"], ["SpecializeCommon(JNIEnv *, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong, jint, jstring, jstring, bool, bool, jstring, jstring, bool, jobjectArray, jobjectArray, bool, bool)", "RuntimeAbort(JNIEnv *, int, const char *)"], ["SpecializeCommon(JNIEnv *, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong, jint, jstring, jstring, bool, bool, jstring, jstring, bool, jobjectArray, jobjectArray, bool, bool)", "NeedsNoRandomizeWorkaround()"], ["SpecializeCommon(JNIEnv *, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong, jint, jstring, jstring, bool, bool, jstring, jstring, bool, jobjectArray, jobjectArray, bool, bool)", "SetCapabilities(uint64_t, uint64_t, uint64_t, (anonymous namespace)::fail_fn_t)"], ["SpecializeCommon(JNIEnv *, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong, jint, jstring, jstring, bool, bool, jstring, jstring, bool, jobjectArray, jobjectArray, bool, bool)", "SetThreadName(const std::string &)"], ["SpecializeCommon(JNIEnv *, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong, jint, jstring, jstring, bool, bool, jstring, jstring, bool, jobjectArray, jobjectArray, bool, bool)", "SetThreadName(const std::string &)"], ["SpecializeCommon(JNIEnv *, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong, jint, jstring, jstring, bool, bool, jstring, jstring, bool, jobjectArray, jobjectArray, bool, bool)", "UnsetChldSignalHandler()"], ["SpecializeCommon(JNIEnv *, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong, jint, jstring, jstring, bool, bool, jstring, jstring, bool, jobjectArray, jobjectArray, bool, bool)", "initUnsolSocketToSystemServer()"], ["GetEffectiveCapabilityMask(JNIEnv *)", "RuntimeAbort(JNIEnv *, int, const char *)"], ["CalculateCapabilities(JNIEnv *, jint, jint, jintArray, bool)", "RuntimeAbort(JNIEnv *, int, const char *)"], ["CalculateCapabilities(JNIEnv *, jint, jint, jintArray, bool)", "GetEffectiveCapabilityMask(JNIEnv *)"], ["AddUsapTableEntry(pid_t, int)", "UsapTableEntry::SetIfInvalid(int32_t, int32_t)"], ["RemoveUsapTableEntry(pid_t)", "UsapTableEntry::ClearForPID(int32_t)"], ["MakeUsapPipeReadFDVector()", "UsapTableEntry::GetValues()"], ["UnmountStorageOnInit(JNIEnv *)", "RuntimeAbort(JNIEnv *, int, const char *)"], ["UnmountStorageOnInit(JNIEnv *)", "RuntimeAbort(JNIEnv *, int, const char *)"], ["UnmountStorageOnInit(JNIEnv *)", "RuntimeAbort(JNIEnv *, int, const char *)"], ["UnmountStorageOnInit(JNIEnv *)", "UnmountTree(const char *)"], ["android::zygote::ForkCommon(JNIEnv *, bool, const std::vector<> &, const std::vector<> &, bool, bool)", "SetSignalHandlers()"], ["android::zygote::ForkCommon(JNIEnv *, bool, const std::vector<> &, const std::vector<> &, bool, bool)", "BlockSignal(int, (anonymous namespace)::fail_fn_t)"], ["android::zygote::ForkCommon(JNIEnv *, bool, const std::vector<> &, const std::vector<> &, bool, bool)", "FileDescriptorTable::Create(const std::vector<> &, fail_fn_t)"], ["android::zygote::ForkCommon(JNIEnv *, bool, const std::vector<> &, const std::vector<> &, bool, bool)", "FileDescriptorTable::Restat(const std::vector<> &, fail_fn_t)"], ["android::zygote::ForkCommon(JNIEnv *, bool, const std::vector<> &, const std::vector<> &, bool, bool)", "PreApplicationInit()"], ["android::zygote::ForkCommon(JNIEnv *, bool, const std::vector<> &, const std::vector<> &, bool, bool)", "DetachDescriptors(JNIEnv *, const std::vector<> &, (anonymous namespace)::fail_fn_t)"], ["android::zygote::ForkCommon(JNIEnv *, bool, const std::vector<> &, const std::vector<> &, bool, bool)", "ClearUsapTable()"], ["android::zygote::ForkCommon(JNIEnv *, bool, const std::vector<> &, const std::vector<> &, bool, bool)", "FileDescriptorTable::ReopenOrDetach(fail_fn_t)"], ["android::zygote::ForkCommon(JNIEnv *, bool, const std::vector<> &, const std::vector<> &, bool, bool)", "UnblockSignal(int, (anonymous namespace)::fail_fn_t)"], ["android::com_android_internal_os_Zygote_nativePreApplicationInit(JNIEnv *, jclass)", "PreApplicationInit()"], ["android::com_android_internal_os_Zygote_nativeForkAndSpecialize(JNIEnv *, jclass, jint, jint, jintArray, jint, jobjectArray, jint, jstring, jstring, jintArray, jintArray, jboolean, jstring, jstring, jboolean, jobjectArray, jobjectArray, jboolean, jboolean)", "CalculateCapabilities(JNIEnv *, jint, jint, jintArray, bool)"], ["android::com_android_internal_os_Zygote_nativeForkAndSpecialize(JNIEnv *, jclass, jint, jint, jintArray, jint, jobjectArray, jint, jstring, jstring, jintArray, jintArray, jboolean, jstring, jstring, jboolean, jobjectArray, jobjectArray, jboolean, jboolean)", "android::zygote::ZygoteFailure(JNIEnv *, const char *, jstring, const std::string &)"], ["android::com_android_internal_os_Zygote_nativeForkAndSpecialize(JNIEnv *, jclass, jint, jint, jintArray, jint, jobjectArray, jint, jstring, jstring, jintArray, jintArray, jboolean, jstring, jstring, jboolean, jobjectArray, jobjectArray, jboolean, jboolean)", "ExtractJIntArray(JNIEnv *, const char *, jstring, jintArray)"], ["android::com_android_internal_os_Zygote_nativeForkAndSpecialize(JNIEnv *, jclass, jint, jint, jintArray, jint, jobjectArray, jint, jstring, jstring, jintArray, jintArray, jboolean, jstring, jstring, jboolean, jobjectArray, jobjectArray, jboolean, jboolean)", "ExtractJIntArray(JNIEnv *, const char *, jstring, jintArray)"], ["android::com_android_internal_os_Zygote_nativeForkAndSpecialize(JNIEnv *, jclass, jint, jint, jintArray, jint, jobjectArray, jint, jstring, jstring, jintArray, jintArray, jboolean, jstring, jstring, jboolean, jobjectArray, jobjectArray, jboolean, jboolean)", "MakeUsapPipeReadFDVector()"], ["android::com_android_internal_os_Zygote_nativeForkAndSpecialize(JNIEnv *, jclass, jint, jint, jintArray, jint, jobjectArray, jint, jstring, jstring, jintArray, jintArray, jboolean, jstring, jstring, jboolean, jobjectArray, jobjectArray, jboolean, jboolean)", "android::zygote::ForkCommon(JNIEnv *, bool, const std::vector<> &, const std::vector<> &, bool, bool)"], ["android::com_android_internal_os_Zygote_nativeForkAndSpecialize(JNIEnv *, jclass, jint, jint, jintArray, jint, jobjectArray, jint, jstring, jstring, jintArray, jintArray, jboolean, jstring, jstring, jboolean, jobjectArray, jobjectArray, jboolean, jboolean)", "SpecializeCommon(JNIEnv *, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong, jint, jstring, jstring, bool, bool, jstring, jstring, bool, jobjectArray, jobjectArray, bool, bool)"], ["android::com_android_internal_os_Zygote_nativeForkSystemServer(JNIEnv *, jclass, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong)", "MakeUsapPipeReadFDVector()"], ["android::com_android_internal_os_Zygote_nativeForkSystemServer(JNIEnv *, jclass, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong)", "android::zygote::ForkCommon(JNIEnv *, bool, const std::vector<> &, const std::vector<> &, bool, bool)"], ["android::com_android_internal_os_Zygote_nativeForkSystemServer(JNIEnv *, jclass, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong)", "SpecializeCommon(JNIEnv *, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong, jint, jstring, jstring, bool, bool, jstring, jstring, bool, jobjectArray, jobjectArray, bool, bool)"], ["android::com_android_internal_os_Zygote_nativeForkSystemServer(JNIEnv *, jclass, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong)", "RuntimeAbort(JNIEnv *, int, const char *)"], ["android::com_android_internal_os_Zygote_nativeForkApp(JNIEnv *, jclass, jint, jint, jintArray, jboolean, jboolean)", "ExtractJIntArray(JNIEnv *, const char *, jstring, jintArray)"], ["android::com_android_internal_os_Zygote_nativeForkApp(JNIEnv *, jclass, jint, jint, jintArray, jboolean, jboolean)", "android::zygote::forkApp(JNIEnv *, int, int, const std::vector<> &, bool, bool, bool)"], ["android::zygote::forkApp(JNIEnv *, int, int, const std::vector<> &, bool, bool, bool)", "MakeUsapPipeReadFDVector()"], ["android::zygote::forkApp(JNIEnv *, int, int, const std::vector<> &, bool, bool, bool)", "android::zygote::ForkCommon(JNIEnv *, bool, const std::vector<> &, const std::vector<> &, bool, bool)"], ["android::com_android_internal_os_Zygote_nativeAllowFileAcrossFork(JNIEnv *, jclass, jstring)", "RuntimeAbort(JNIEnv *, int, const char *)"], ["android::com_android_internal_os_Zygote_nativeAllowFileAcrossFork(JNIEnv *, jclass, jstring)", "FileDescriptorAllowlist::Allow(const std::string &)"], ["android::com_android_internal_os_Zygote_nativeInstallSeccompUidGidFilter(JNIEnv *, jclass, jint, jint)", "RuntimeAbort(JNIEnv *, int, const char *)"], ["android::com_android_internal_os_Zygote_nativeSpecializeAppProcess(JNIEnv *, jclass, jint, jint, jintArray, jint, jobjectArray, jint, jstring, jstring, jboolean, jstring, jstring, jboolean, jobjectArray, jobjectArray, jboolean, jboolean)", "CalculateCapabilities(JNIEnv *, jint, jint, jintArray, bool)"], ["android::com_android_internal_os_Zygote_nativeSpecializeAppProcess(JNIEnv *, jclass, jint, jint, jintArray, jint, jobjectArray, jint, jstring, jstring, jboolean, jstring, jstring, jboolean, jobjectArray, jobjectArray, jboolean, jboolean)", "SpecializeCommon(JNIEnv *, uid_t, gid_t, jintArray, jint, jobjectArray, jlong, jlong, jint, jstring, jstring, bool, bool, jstring, jstring, bool, jobjectArray, jobjectArray, bool, bool)"], ["android::com_android_internal_os_Zygote_nativeInitNativeState(JNIEnv *, jclass, jboolean)", "initUnsolSocketToSystemServer()"], ["android::com_android_internal_os_Zygote_nativeInitNativeState(JNIEnv *, jclass, jboolean)", "UnmountStorageOnInit(JNIEnv *)"], ["android::com_android_internal_os_Zygote_nativeInitNativeState(JNIEnv *, jclass, jboolean)", "android::zygote::ZygoteFailure(JNIEnv *, const char *, jstring, const std::string &)"], ["android::com_android_internal_os_Zygote_nativeGetUsapPipeFDs(JNIEnv *, jclass)", "MakeUsapPipeReadFDVector()"], ["android::com_android_internal_os_Zygote_nativeAddUsapTableEntry(jint, jint)", "AddUsapTableEntry(pid_t, int)"], ["android::com_android_internal_os_Zygote_nativeRemoveUsapTableEntry(jint)", "RemoveUsapTableEntry(pid_t)"], ["android::com_android_internal_os_Zygote_nativeGetUsapPoolEventFD(JNIEnv *, jclass)", "android::zygote::ZygoteFailure(JNIEnv *, const char *, jstring, const std::string &)"], ["android::com_android_internal_os_Zygote_nativeEmptyUsapPool(JNIEnv *, jclass)", "UsapTableEntry::GetValues()"], ["android::com_android_internal_os_Zygote_nativeEmptyUsapPool(JNIEnv *, jclass)", "UsapTableEntry::Invalidate()"], ["android::com_android_internal_os_Zygote_nativeBlockSigTerm(JNIEnv *, jclass)", "BlockSignal(int, (anonymous namespace)::fail_fn_t)"], ["android::com_android_internal_os_Zygote_nativeUnblockSigTerm(JNIEnv *, jclass)", "UnblockSignal(int, (anonymous namespace)::fail_fn_t)"], ["android::com_android_internal_os_Zygote_nativeMarkOpenedFilesBeforePreload(JNIEnv *, jclass)", "GetOpenFds(fail_fn_t)"], ["android::com_android_internal_os_Zygote_nativeAllowFilesOpenedByPreload(JNIEnv *, jclass)", "GetOpenFds(fail_fn_t)"]]}