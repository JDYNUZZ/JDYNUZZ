{"file": "/hci/chaoran_data/android-12.0.0_r31/frameworks/base/cmds/hid/jni/com_android_commands_hid_Device.cpp", "jni_methods": [{"java_fun": "nativeOpenDevice", "java_sig": "(Ljava/lang/String;IIII[BLcom/android/commands/hid/Device$DeviceCallback;)J", "cpp_fun": "openDevice", "java_fun_full": "com.android.commands.hid.Device long nativeOpenDevice(java.lang.String, int, int, int, int, byte[], com.android.commands.hid.Device$DeviceCallback)"}, {"java_fun": "nativeSendReport", "java_sig": "(J[B)V", "cpp_fun": "sendReport", "java_fun_full": "com.android.commands.hid.Device void nativeSendReport(long, byte[])"}, {"java_fun": "nativeSendGetFeatureReportReply", "java_sig": "(JI[B)V", "cpp_fun": "sendGetFeatureReportReply", "java_fun_full": "com.android.commands.hid.Device void nativeSendGetFeatureReportReply(long, int, byte[])"}, {"java_fun": "nativeCloseDevice", "java_sig": "(J)V", "cpp_fun": "closeDevice", "java_fun_full": "com.android.commands.hid.Device void nativeCloseDevice(long)"}], "dependency": [["android::uhid::handleLooperEvents(int, int, void *)", "android::uhid::Device::handleEvents(int)"], ["android::uhid::DeviceCallback::onDeviceError()", "android::uhid::DeviceCallback::getJNIEnv()"], ["android::uhid::DeviceCallback::onDeviceError()", "android::uhid::checkAndClearException(JNIEnv *, const char *)"], ["android::uhid::DeviceCallback::onDeviceOpen()", "android::uhid::DeviceCallback::getJNIEnv()"], ["android::uhid::DeviceCallback::onDeviceOpen()", "android::uhid::checkAndClearException(JNIEnv *, const char *)"], ["android::uhid::DeviceCallback::onDeviceGetReport(uint32_t, uint8_t)", "android::uhid::DeviceCallback::getJNIEnv()"], ["android::uhid::DeviceCallback::onDeviceGetReport(uint32_t, uint8_t)", "android::uhid::checkAndClearException(JNIEnv *, const char *)"], ["android::uhid::DeviceCallback::onDeviceSetReport(uint8_t, const std::vector<> &)", "android::uhid::DeviceCallback::getJNIEnv()"], ["android::uhid::DeviceCallback::onDeviceSetReport(uint8_t, const std::vector<> &)", "android::uhid::toJbyteArray(JNIEnv *, const std::vector<> &)"], ["android::uhid::DeviceCallback::onDeviceSetReport(uint8_t, const std::vector<> &)", "android::uhid::checkAndClearException(JNIEnv *, const char *)"], ["android::uhid::DeviceCallback::onDeviceOutput(uint8_t, const std::vector<> &)", "android::uhid::DeviceCallback::getJNIEnv()"], ["android::uhid::DeviceCallback::onDeviceOutput(uint8_t, const std::vector<> &)", "android::uhid::toJbyteArray(JNIEnv *, const std::vector<> &)"], ["android::uhid::DeviceCallback::onDeviceOutput(uint8_t, const std::vector<> &)", "android::uhid::checkAndClearException(JNIEnv *, const char *)"], ["android::uhid::Device::open(int32_t, const char *, int32_t, int32_t, uint16_t, const std::vector<> &, std::unique_ptr<>)", "android::uhid::Device::Device(int32_t, android::base::unique_fd, std::unique_ptr<>)"], ["android::uhid::Device::sendReport(const std::vector<> &)", "android::uhid::writeEvent(int, struct uhid_event &, const char *)"], ["android::uhid::Device::sendGetFeatureReportReply(uint32_t, const std::vector<> &)", "android::uhid::writeEvent(int, struct uhid_event &, const char *)"], ["android::uhid::Device::handleEvents(int)", "android::uhid::DeviceCallback::onDeviceError()"], ["android::uhid::Device::handleEvents(int)", "android::uhid::DeviceCallback::onDeviceError()"], ["android::uhid::Device::handleEvents(int)", "android::uhid::DeviceCallback::onDeviceOpen()"], ["android::uhid::Device::handleEvents(int)", "android::uhid::DeviceCallback::onDeviceGetReport(uint32_t, uint8_t)"], ["android::uhid::Device::handleEvents(int)", "android::uhid::toString(const std::vector<> &)"], ["android::uhid::Device::handleEvents(int)", "android::uhid::DeviceCallback::onDeviceSetReport(uint8_t, const std::vector<> &)"], ["android::uhid::Device::handleEvents(int)", "android::uhid::toString(const std::vector<> &)"], ["android::uhid::Device::handleEvents(int)", "android::uhid::DeviceCallback::onDeviceOutput(uint8_t, const std::vector<> &)"], ["android::openDevice(JNIEnv *, jclass, jstring, jint, jint, jint, jint, jbyteArray, jobject)", "android::getData(JNIEnv *, jbyteArray)"], ["android::openDevice(JNIEnv *, jclass, jstring, jint, jint, jint, jint, jbyteArray, jobject)", "android::uhid::Device::open(int32_t, const char *, int32_t, int32_t, uint16_t, const std::vector<> &, std::unique_ptr<>)"], ["android::sendReport(JNIEnv *, jclass, jlong, jbyteArray)", "android::getData(JNIEnv *, jbyteArray)"], ["android::sendReport(JNIEnv *, jclass, jlong, jbyteArray)", "android::uhid::Device::sendReport(const std::vector<> &)"], ["android::sendGetFeatureReportReply(JNIEnv *, jclass, jlong, jint, jbyteArray)", "android::getData(JNIEnv *, jbyteArray)"], ["android::sendGetFeatureReportReply(JNIEnv *, jclass, jlong, jint, jbyteArray)", "android::uhid::Device::sendGetFeatureReportReply(uint32_t, const std::vector<> &)"], ["JNI_OnLoad(JavaVM *, void *)", "android::register_com_android_commands_hid_Device(JNIEnv *)"]]}